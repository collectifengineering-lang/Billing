"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthUser: function() { return /* binding */ getAuthUser; },\n/* harmony export */   graphConfig: function() { return /* binding */ graphConfig; },\n/* harmony export */   loginRequest: function() { return /* binding */ loginRequest; },\n/* harmony export */   msalInstance: function() { return /* binding */ msalInstance; },\n/* harmony export */   signIn: function() { return /* binding */ signIn; },\n/* harmony export */   signOut: function() { return /* binding */ signOut; }\n/* harmony export */ });\n/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-browser */ \"(app-pages-browser)/./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n// Check if required environment variables are set\nconst clientId = \"72ed6933-6bc6-430e-a75a-cb5d2e1c20e1\";\nconst tenantId = \"e4748cdc-321b-4db0-bc36-141b121a9117\";\nif (!clientId || !tenantId) {\n    console.warn(\"Azure AD environment variables are not set. Authentication will not work.\");\n    console.warn(\"Please set NEXT_PUBLIC_AZURE_AD_CLIENT_ID and NEXT_PUBLIC_AZURE_AD_TENANT_ID in your .env.local file\");\n}\nconst msalConfig = {\n    auth: {\n        clientId: clientId || \"dummy-client-id\",\n        authority: \"https://login.microsoftonline.com/\".concat(tenantId || \"dummy-tenant-id\"),\n        redirectUri:  true ? window.location.origin : 0\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\",\n        storeAuthStateInCookie: false\n    }\n};\nconst msalInstance = new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_0__.PublicClientApplication(msalConfig);\nconst loginRequest = {\n    scopes: [\n        \"User.Read\",\n        \"Directory.Read.All\"\n    ]\n};\nconst graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\nasync function signIn() {\n    try {\n        // Check if environment variables are set\n        if (!clientId || !tenantId) {\n            throw new Error(\"Azure AD environment variables are not configured. Please set NEXT_PUBLIC_AZURE_AD_CLIENT_ID and NEXT_PUBLIC_AZURE_AD_TENANT_ID in your .env.local file\");\n        }\n        // Use redirect flow instead of popup to avoid cross-origin issues\n        await msalInstance.loginRedirect(loginRequest);\n        return null; // Redirect will handle the flow\n    } catch (error) {\n        console.error(\"Sign in error:\", error);\n        throw error;\n    }\n}\nasync function signOut() {\n    try {\n        await msalInstance.logoutPopup();\n    } catch (error) {\n        console.error(\"Sign out error:\", error);\n    }\n}\nasync function getAuthUser() {\n    try {\n        var _process_env_NEXT_PUBLIC_ADMIN_EMAILS, _userData_mail;\n        const account1 = msalInstance.getActiveAccount();\n        if (!account1) return null;\n        // Get user details from Microsoft Graph to check roles\n        const token = await msalInstance.acquireTokenSilent({\n            scopes: [\n                \"User.Read\",\n                \"Directory.Read.All\"\n            ]\n        });\n        const response = await fetch(\"https://graph.microsoft.com/v1.0/me\", {\n            headers: {\n                \"Authorization\": \"Bearer \".concat(token.accessToken)\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch user details\");\n        }\n        const userData = await response.json();\n        // Check if user has admin role by looking at their email domain or specific admin emails\n        // You can customize this logic based on your Azure AD setup\n        const adminEmails = ((_process_env_NEXT_PUBLIC_ADMIN_EMAILS = process.env.NEXT_PUBLIC_ADMIN_EMAILS) === null || _process_env_NEXT_PUBLIC_ADMIN_EMAILS === void 0 ? void 0 : _process_env_NEXT_PUBLIC_ADMIN_EMAILS.split(\",\")) || [];\n        const isAdmin = adminEmails.includes(userData.mail) || adminEmails.includes(userData.userPrincipalName) || ((_userData_mail = userData.mail) === null || _userData_mail === void 0 ? void 0 : _userData_mail.endsWith(\"@yourcompany.com\")); // Replace with your admin domain\n        return {\n            id: account1.localAccountId,\n            name: account1.name || \"\",\n            email: account1.username || \"\",\n            isAdmin: isAdmin,\n            isBasic: true\n        };\n    } catch (error) {\n        var _account, _account1, _account2;\n        console.error(\"Get auth user error:\", error);\n        // Fallback to basic user if Graph API fails\n        return {\n            id: ((_account = account) === null || _account === void 0 ? void 0 : _account.localAccountId) || \"\",\n            name: ((_account1 = account) === null || _account1 === void 0 ? void 0 : _account1.name) || \"\",\n            email: ((_account2 = account) === null || _account2 === void 0 ? void 0 : _account2.username) || \"\",\n            isAdmin: false,\n            isBasic: true\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBLFdBQUFBLHFCQUFBQSwrQkFBQUEsU0FBU21CLGNBQWMsS0FBSTtZQUMvQkMsTUFBTXBCLEVBQUFBLFlBQUFBLHFCQUFBQSxnQ0FBQUEsVUFBU29CLElBQUksS0FBSTtZQUN2QkMsT0FBT3JCLEVBQUFBLFlBQUFBLHFCQUFBQSxnQ0FBQUEsVUFBU3NCLFFBQVEsS0FBSTtZQUM1QlQsU0FBUztZQUNUVSxTQUFTO1FBQ1g7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9hdXRoLnRzP2JmN2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHVibGljQ2xpZW50QXBwbGljYXRpb24sIENvbmZpZ3VyYXRpb24sIEF1dGhlbnRpY2F0aW9uUmVzdWx0IH0gZnJvbSAnQGF6dXJlL21zYWwtYnJvd3Nlcic7XG5cbi8vIENoZWNrIGlmIHJlcXVpcmVkIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgc2V0XG5jb25zdCBjbGllbnRJZCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FaVVJFX0FEX0NMSUVOVF9JRDtcbmNvbnN0IHRlbmFudElkID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVpVUkVfQURfVEVOQU5UX0lEO1xuXG5pZiAoIWNsaWVudElkIHx8ICF0ZW5hbnRJZCkge1xuICBjb25zb2xlLndhcm4oJ0F6dXJlIEFEIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgbm90IHNldC4gQXV0aGVudGljYXRpb24gd2lsbCBub3Qgd29yay4nKTtcbiAgY29uc29sZS53YXJuKCdQbGVhc2Ugc2V0IE5FWFRfUFVCTElDX0FaVVJFX0FEX0NMSUVOVF9JRCBhbmQgTkVYVF9QVUJMSUNfQVpVUkVfQURfVEVOQU5UX0lEIGluIHlvdXIgLmVudi5sb2NhbCBmaWxlJyk7XG59XG5cbmNvbnN0IG1zYWxDb25maWc6IENvbmZpZ3VyYXRpb24gPSB7XG4gIGF1dGg6IHtcbiAgICBjbGllbnRJZDogY2xpZW50SWQgfHwgJ2R1bW15LWNsaWVudC1pZCcsXG4gICAgYXV0aG9yaXR5OiBgaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tLyR7dGVuYW50SWQgfHwgJ2R1bW15LXRlbmFudC1pZCd9YCxcbiAgICByZWRpcmVjdFVyaTogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cubG9jYXRpb24ub3JpZ2luIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcsXG4gIH0sXG4gIGNhY2hlOiB7XG4gICAgY2FjaGVMb2NhdGlvbjogJ3Nlc3Npb25TdG9yYWdlJyxcbiAgICBzdG9yZUF1dGhTdGF0ZUluQ29va2llOiBmYWxzZSxcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IG1zYWxJbnN0YW5jZSA9IG5ldyBQdWJsaWNDbGllbnRBcHBsaWNhdGlvbihtc2FsQ29uZmlnKTtcblxuZXhwb3J0IGludGVyZmFjZSBBdXRoVXNlciB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgaXNBZG1pbjogYm9vbGVhbjtcbiAgaXNCYXNpYzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IGxvZ2luUmVxdWVzdCA9IHtcbiAgc2NvcGVzOiBbJ1VzZXIuUmVhZCcsICdEaXJlY3RvcnkuUmVhZC5BbGwnXVxufTtcblxuZXhwb3J0IGNvbnN0IGdyYXBoQ29uZmlnID0ge1xuICBncmFwaE1lRW5kcG9pbnQ6ICdodHRwczovL2dyYXBoLm1pY3Jvc29mdC5jb20vdjEuMC9tZSdcbn07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduSW4oKTogUHJvbWlzZTxBdXRoZW50aWNhdGlvblJlc3VsdCB8IG51bGw+IHtcbiAgdHJ5IHtcbiAgICAvLyBDaGVjayBpZiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIHNldFxuICAgIGlmICghY2xpZW50SWQgfHwgIXRlbmFudElkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0F6dXJlIEFEIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgbm90IGNvbmZpZ3VyZWQuIFBsZWFzZSBzZXQgTkVYVF9QVUJMSUNfQVpVUkVfQURfQ0xJRU5UX0lEIGFuZCBORVhUX1BVQkxJQ19BWlVSRV9BRF9URU5BTlRfSUQgaW4geW91ciAuZW52LmxvY2FsIGZpbGUnKTtcbiAgICB9XG4gICAgXG4gICAgLy8gVXNlIHJlZGlyZWN0IGZsb3cgaW5zdGVhZCBvZiBwb3B1cCB0byBhdm9pZCBjcm9zcy1vcmlnaW4gaXNzdWVzXG4gICAgYXdhaXQgbXNhbEluc3RhbmNlLmxvZ2luUmVkaXJlY3QobG9naW5SZXF1ZXN0KTtcbiAgICByZXR1cm4gbnVsbDsgLy8gUmVkaXJlY3Qgd2lsbCBoYW5kbGUgdGhlIGZsb3dcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTaWduIGluIGVycm9yOicsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk91dCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBtc2FsSW5zdGFuY2UubG9nb3V0UG9wdXAoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTaWduIG91dCBlcnJvcjonLCBlcnJvcik7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEF1dGhVc2VyKCk6IFByb21pc2U8QXV0aFVzZXIgfCBudWxsPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgYWNjb3VudCA9IG1zYWxJbnN0YW5jZS5nZXRBY3RpdmVBY2NvdW50KCk7XG4gICAgaWYgKCFhY2NvdW50KSByZXR1cm4gbnVsbDtcblxuICAgIC8vIEdldCB1c2VyIGRldGFpbHMgZnJvbSBNaWNyb3NvZnQgR3JhcGggdG8gY2hlY2sgcm9sZXNcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IG1zYWxJbnN0YW5jZS5hY3F1aXJlVG9rZW5TaWxlbnQoe1xuICAgICAgc2NvcGVzOiBbJ1VzZXIuUmVhZCcsICdEaXJlY3RvcnkuUmVhZC5BbGwnXVxuICAgIH0pO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9ncmFwaC5taWNyb3NvZnQuY29tL3YxLjAvbWUnLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3Rva2VuLmFjY2Vzc1Rva2VufWBcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHVzZXIgZGV0YWlscycpO1xuICAgIH1cblxuICAgIGNvbnN0IHVzZXJEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIHVzZXIgaGFzIGFkbWluIHJvbGUgYnkgbG9va2luZyBhdCB0aGVpciBlbWFpbCBkb21haW4gb3Igc3BlY2lmaWMgYWRtaW4gZW1haWxzXG4gICAgLy8gWW91IGNhbiBjdXN0b21pemUgdGhpcyBsb2dpYyBiYXNlZCBvbiB5b3VyIEF6dXJlIEFEIHNldHVwXG4gICAgY29uc3QgYWRtaW5FbWFpbHMgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BRE1JTl9FTUFJTFM/LnNwbGl0KCcsJykgfHwgW107XG4gICAgY29uc3QgaXNBZG1pbiA9IGFkbWluRW1haWxzLmluY2x1ZGVzKHVzZXJEYXRhLm1haWwpIHx8IFxuICAgICAgICAgICAgICAgICAgIGFkbWluRW1haWxzLmluY2x1ZGVzKHVzZXJEYXRhLnVzZXJQcmluY2lwYWxOYW1lKSB8fFxuICAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLm1haWw/LmVuZHNXaXRoKCdAeW91cmNvbXBhbnkuY29tJyk7IC8vIFJlcGxhY2Ugd2l0aCB5b3VyIGFkbWluIGRvbWFpblxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBhY2NvdW50LmxvY2FsQWNjb3VudElkLFxuICAgICAgbmFtZTogYWNjb3VudC5uYW1lIHx8ICcnLFxuICAgICAgZW1haWw6IGFjY291bnQudXNlcm5hbWUgfHwgJycsXG4gICAgICBpc0FkbWluOiBpc0FkbWluLFxuICAgICAgaXNCYXNpYzogdHJ1ZSwgLy8gQWxsIGF1dGhlbnRpY2F0ZWQgdXNlcnMgZ2V0IGJhc2ljIGFjY2Vzc1xuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignR2V0IGF1dGggdXNlciBlcnJvcjonLCBlcnJvcik7XG4gICAgLy8gRmFsbGJhY2sgdG8gYmFzaWMgdXNlciBpZiBHcmFwaCBBUEkgZmFpbHNcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IGFjY291bnQ/LmxvY2FsQWNjb3VudElkIHx8ICcnLFxuICAgICAgbmFtZTogYWNjb3VudD8ubmFtZSB8fCAnJyxcbiAgICAgIGVtYWlsOiBhY2NvdW50Py51c2VybmFtZSB8fCAnJyxcbiAgICAgIGlzQWRtaW46IGZhbHNlLCAvLyBEZWZhdWx0IHRvIG5vbi1hZG1pbiBmb3Igc2VjdXJpdHlcbiAgICAgIGlzQmFzaWM6IHRydWUsXG4gICAgfTtcbiAgfVxufSAiXSwibmFtZXMiOlsiUHVibGljQ2xpZW50QXBwbGljYXRpb24iLCJjbGllbnRJZCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BWlVSRV9BRF9DTElFTlRfSUQiLCJ0ZW5hbnRJZCIsIk5FWFRfUFVCTElDX0FaVVJFX0FEX1RFTkFOVF9JRCIsImNvbnNvbGUiLCJ3YXJuIiwibXNhbENvbmZpZyIsImF1dGgiLCJhdXRob3JpdHkiLCJyZWRpcmVjdFVyaSIsIndpbmRvdyIsImxvY2F0aW9uIiwib3JpZ2luIiwiY2FjaGUiLCJjYWNoZUxvY2F0aW9uIiwic3RvcmVBdXRoU3RhdGVJbkNvb2tpZSIsIm1zYWxJbnN0YW5jZSIsImxvZ2luUmVxdWVzdCIsInNjb3BlcyIsImdyYXBoQ29uZmlnIiwiZ3JhcGhNZUVuZHBvaW50Iiwic2lnbkluIiwiRXJyb3IiLCJsb2dpblJlZGlyZWN0IiwiZXJyb3IiLCJzaWduT3V0IiwibG9nb3V0UG9wdXAiLCJnZXRBdXRoVXNlciIsInVzZXJEYXRhIiwiYWNjb3VudCIsImdldEFjdGl2ZUFjY291bnQiLCJ0b2tlbiIsImFjcXVpcmVUb2tlblNpbGVudCIsInJlc3BvbnNlIiwiZmV0Y2giLCJoZWFkZXJzIiwiYWNjZXNzVG9rZW4iLCJvayIsImpzb24iLCJhZG1pbkVtYWlscyIsIk5FWFRfUFVCTElDX0FETUlOX0VNQUlMUyIsInNwbGl0IiwiaXNBZG1pbiIsImluY2x1ZGVzIiwibWFpbCIsInVzZXJQcmluY2lwYWxOYW1lIiwiZW5kc1dpdGgiLCJpZCIsImxvY2FsQWNjb3VudElkIiwibmFtZSIsImVtYWlsIiwidXNlcm5hbWUiLCJpc0Jhc2ljIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.ts\n"));

/***/ })

});