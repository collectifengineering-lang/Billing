"use strict";(()=>{var e={};e.id=735,e.ids=[735],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84953:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>b,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var n={};s.r(n),s.d(n,{GET:()=>p,dynamic:()=>u});var r=s(49303),a=s(88716),o=s(60670),i=s(87070),c=s(52663);let u="force-dynamic";async function p(){if(!process.env.VERCEL_ENV)return i.NextResponse.json({success:!1,message:"Database connection skipped during build"});if(!c.Z)return i.NextResponse.json({success:!1,message:"Prisma client not available"},{status:500});try{console.log("Testing basic database connection...");let e=await c.Z.$queryRaw`SELECT 1 as test`;return console.log("Database connection successful:",e),i.NextResponse.json({success:!0,message:"Database connection successful",result:e})}catch(e){return console.error("Database connection failed:",e),i.NextResponse.json({error:"Database connection failed",details:e instanceof Error?e.message:"Unknown error",code:e instanceof Error&&"code"in e?e.code:void 0},{status:500})}}let d=new r.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/test-db/route",pathname:"/api/test-db",filename:"route",bundlePath:"app/api/test-db/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\test-db\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:g}=d,b="/api/test-db/route";function f(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},52663:(e,t,s)=>{s.d(t,{Z:()=>r});let n=require("@prisma/client"),r=globalThis.prisma??new n.PrismaClient({log:["error"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),n=t.X(0,[276,972],()=>s(84953));module.exports=n})();