"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/asr-fees/route";
exports.ids = ["app/api/asr-fees/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fasr-fees%2Froute&page=%2Fapi%2Fasr-fees%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fasr-fees%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fasr-fees%2Froute&page=%2Fapi%2Fasr-fees%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fasr-fees%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Jonathan_Desktop_Billing_app_api_asr_fees_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/asr-fees/route.ts */ \"(rsc)/./app/api/asr-fees/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/asr-fees/route\",\n        pathname: \"/api/asr-fees\",\n        filename: \"route\",\n        bundlePath: \"app/api/asr-fees/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Billing\\\\app\\\\api\\\\asr-fees\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Jonathan_Desktop_Billing_app_api_asr_fees_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/asr-fees/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhc3ItZmVlcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYXNyLWZlZXMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhc3ItZmVlcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNKb25hdGhhbiU1Q0Rlc2t0b3AlNUNCaWxsaW5nJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNKb25hdGhhbiU1Q0Rlc2t0b3AlNUNCaWxsaW5nJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNtQjtBQUNoRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3pvaG8tYmlsbGluZy1wbGF0Zm9ybS8/MWZiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxKb25hdGhhblxcXFxEZXNrdG9wXFxcXEJpbGxpbmdcXFxcYXBwXFxcXGFwaVxcXFxhc3ItZmVlc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXNyLWZlZXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hc3ItZmVlc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYXNyLWZlZXMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxKb25hdGhhblxcXFxEZXNrdG9wXFxcXEJpbGxpbmdcXFxcYXBwXFxcXGFwaVxcXFxhc3ItZmVlc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXNyLWZlZXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fasr-fees%2Froute&page=%2Fapi%2Fasr-fees%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fasr-fees%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/asr-fees/route.ts":
/*!***********************************!*\
  !*** ./app/api/asr-fees/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/database */ \"(rsc)/./lib/database.ts\");\n\n\n// GET: Fetch all ASR fees\nasync function GET() {\n    try {\n        // Ensure database schema exists\n        const schemaExists = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.ensureDatabaseSchema)();\n        if (!schemaExists) {\n            // Tables don't exist yet, return empty data\n            console.log(\"Tables do not exist yet, returning empty ASR fees\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({});\n        }\n        const asrFees = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.prisma.asrFee.findMany();\n        // Transform to record format: { projectId: value }\n        const formatted = asrFees.reduce((acc, af)=>{\n            acc[af.projectId] = af.value;\n            return acc;\n        }, {});\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(formatted);\n    } catch (error) {\n        console.error(\"Error fetching ASR fees:\", error);\n        // If it's a table doesn't exist error, return empty data\n        if (error.code === \"P2021\" || error.message?.includes(\"does not exist\")) {\n            console.log(\"Tables do not exist, returning empty ASR fees\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({});\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch ASR fees\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST: Update or create ASR fee\nasync function POST(request) {\n    // Store request data at the beginning so it's accessible throughout the function\n    const requestData = await request.json();\n    const { projectId, value } = requestData;\n    try {\n        // Check if tables exist first\n        const schemaExists = await (0,_lib_database__WEBPACK_IMPORTED_MODULE_1__.ensureDatabaseSchema)();\n        if (!schemaExists) {\n            console.log(\"Tables do not exist yet, but Prisma Accelerate will create them on first insert\");\n            console.log(\"Attempting to create table by inserting data...\");\n        }\n        await _lib_database__WEBPACK_IMPORTED_MODULE_1__.prisma.asrFee.upsert({\n            where: {\n                projectId\n            },\n            update: {\n                value\n            },\n            create: {\n                projectId,\n                value\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Error updating ASR fee:\", error);\n        // If it's a table doesn't exist error, try to create the schema\n        if (error.code === \"P2021\" || error.message?.includes(\"does not exist\")) {\n            console.log(\"Table does not exist, attempting to create schema...\");\n            try {\n                // Try to create the table by inserting test data\n                await _lib_database__WEBPACK_IMPORTED_MODULE_1__.prisma.asrFee.create({\n                    data: {\n                        projectId: \"__test__\",\n                        value: 0\n                    }\n                });\n                // Delete test data\n                await _lib_database__WEBPACK_IMPORTED_MODULE_1__.prisma.asrFee.deleteMany({\n                    where: {\n                        projectId: \"__test__\"\n                    }\n                });\n                // Now try the original operation again\n                await _lib_database__WEBPACK_IMPORTED_MODULE_1__.prisma.asrFee.upsert({\n                    where: {\n                        projectId\n                    },\n                    update: {\n                        value\n                    },\n                    create: {\n                        projectId,\n                        value\n                    }\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            } catch (createError) {\n                console.error(\"Failed to create table:\", createError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Database schema not ready. Please run database setup first.\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to update ASR fee\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/asr-fees/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDatabaseSchema: () => (/* binding */ createDatabaseSchema),\n/* harmony export */   ensureDatabaseSchema: () => (/* binding */ ensureDatabaseSchema),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nasync function ensureDatabaseSchema() {\n    try {\n        // Check if tables already exist by trying to query them\n        await prisma.projection.findFirst();\n        console.log(\"Database schema already exists\");\n        return true; // Tables exist\n    } catch (error) {\n        console.log(\"Tables do not exist, attempting to create schema...\");\n        // If it's a table doesn't exist error, we need to create the schema\n        if (error.code === \"P2021\" || error.message?.includes(\"does not exist\")) {\n            try {\n                // Try to create the schema by running a simple operation\n                // This will trigger Prisma to create the tables if using Prisma Accelerate\n                console.log(\"Attempting to create database schema...\");\n                // Try to create a test record to trigger table creation\n                await prisma.projection.create({\n                    data: {\n                        projectId: \"__test__\",\n                        month: \"__test__\",\n                        value: 0\n                    }\n                });\n                // If successful, delete the test record\n                await prisma.projection.deleteMany({\n                    where: {\n                        projectId: \"__test__\",\n                        month: \"__test__\"\n                    }\n                });\n                console.log(\"Database schema created successfully\");\n                return true;\n            } catch (createError) {\n                console.error(\"Failed to create database schema:\", createError);\n                return false;\n            }\n        }\n        console.log(\"Tables do not exist, but Prisma Accelerate will create them automatically\");\n        console.log(\"Note: With Prisma Accelerate, tables are created automatically when you first insert data\");\n        return false; // Tables don't exist yet\n    }\n}\nasync function createDatabaseSchema() {\n    try {\n        console.log(\"Creating database schema...\");\n        // This will create all tables defined in the schema\n        // We'll use a more direct approach by trying to create the schema\n        const result = await ensureDatabaseSchema();\n        if (result) {\n            console.log(\"Database schema creation completed successfully\");\n            return true;\n        } else {\n            console.error(\"Database schema creation failed\");\n            return false;\n        }\n    } catch (error) {\n        console.error(\"Database schema creation failed:\", error);\n        return false;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGF0YWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEM7QUFFOUMsTUFBTUMsU0FBUyxJQUFJRCx3REFBWUE7QUFFeEIsZUFBZUU7SUFDcEIsSUFBSTtRQUNGLHdEQUF3RDtRQUN4RCxNQUFNRCxPQUFPRSxVQUFVLENBQUNDLFNBQVM7UUFDakNDLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU8sTUFBTSxlQUFlO0lBQzlCLEVBQUUsT0FBT0MsT0FBWTtRQUNuQkYsUUFBUUMsR0FBRyxDQUFDO1FBRVosb0VBQW9FO1FBQ3BFLElBQUlDLE1BQU1DLElBQUksS0FBSyxXQUFXRCxNQUFNRSxPQUFPLEVBQUVDLFNBQVMsbUJBQW1CO1lBQ3ZFLElBQUk7Z0JBQ0YseURBQXlEO2dCQUN6RCwyRUFBMkU7Z0JBQzNFTCxRQUFRQyxHQUFHLENBQUM7Z0JBRVosd0RBQXdEO2dCQUN4RCxNQUFNTCxPQUFPRSxVQUFVLENBQUNRLE1BQU0sQ0FBQztvQkFDN0JDLE1BQU07d0JBQ0pDLFdBQVc7d0JBQ1hDLE9BQU87d0JBQ1BDLE9BQU87b0JBQ1Q7Z0JBQ0Y7Z0JBRUEsd0NBQXdDO2dCQUN4QyxNQUFNZCxPQUFPRSxVQUFVLENBQUNhLFVBQVUsQ0FBQztvQkFDakNDLE9BQU87d0JBQ0xKLFdBQVc7d0JBQ1hDLE9BQU87b0JBQ1Q7Z0JBQ0Y7Z0JBRUFULFFBQVFDLEdBQUcsQ0FBQztnQkFDWixPQUFPO1lBQ1QsRUFBRSxPQUFPWSxhQUFrQjtnQkFDekJiLFFBQVFFLEtBQUssQ0FBQyxxQ0FBcUNXO2dCQUNuRCxPQUFPO1lBQ1Q7UUFDRjtRQUVBYixRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBTyxPQUFPLHlCQUF5QjtJQUN6QztBQUNGO0FBRU8sZUFBZWE7SUFDcEIsSUFBSTtRQUNGZCxRQUFRQyxHQUFHLENBQUM7UUFFWixvREFBb0Q7UUFDcEQsa0VBQWtFO1FBQ2xFLE1BQU1jLFNBQVMsTUFBTWxCO1FBRXJCLElBQUlrQixRQUFRO1lBQ1ZmLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU87UUFDVCxPQUFPO1lBQ0xELFFBQVFFLEtBQUssQ0FBQztZQUNkLE9BQU87UUFDVDtJQUNGLEVBQUUsT0FBT0EsT0FBTztRQUNkRixRQUFRRSxLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxPQUFPO0lBQ1Q7QUFDRjtBQUVrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3pvaG8tYmlsbGluZy1wbGF0Zm9ybS8uL2xpYi9kYXRhYmFzZS50cz80ZDQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcclxuXHJcbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbnN1cmVEYXRhYmFzZVNjaGVtYSgpIHtcclxuICB0cnkge1xyXG4gICAgLy8gQ2hlY2sgaWYgdGFibGVzIGFscmVhZHkgZXhpc3QgYnkgdHJ5aW5nIHRvIHF1ZXJ5IHRoZW1cclxuICAgIGF3YWl0IHByaXNtYS5wcm9qZWN0aW9uLmZpbmRGaXJzdCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIHNjaGVtYSBhbHJlYWR5IGV4aXN0cycpO1xyXG4gICAgcmV0dXJuIHRydWU7IC8vIFRhYmxlcyBleGlzdFxyXG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcclxuICAgIGNvbnNvbGUubG9nKCdUYWJsZXMgZG8gbm90IGV4aXN0LCBhdHRlbXB0aW5nIHRvIGNyZWF0ZSBzY2hlbWEuLi4nKTtcclxuICAgIFxyXG4gICAgLy8gSWYgaXQncyBhIHRhYmxlIGRvZXNuJ3QgZXhpc3QgZXJyb3IsIHdlIG5lZWQgdG8gY3JlYXRlIHRoZSBzY2hlbWFcclxuICAgIGlmIChlcnJvci5jb2RlID09PSAnUDIwMjEnIHx8IGVycm9yLm1lc3NhZ2U/LmluY2x1ZGVzKCdkb2VzIG5vdCBleGlzdCcpKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgLy8gVHJ5IHRvIGNyZWF0ZSB0aGUgc2NoZW1hIGJ5IHJ1bm5pbmcgYSBzaW1wbGUgb3BlcmF0aW9uXHJcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRyaWdnZXIgUHJpc21hIHRvIGNyZWF0ZSB0aGUgdGFibGVzIGlmIHVzaW5nIFByaXNtYSBBY2NlbGVyYXRlXHJcbiAgICAgICAgY29uc29sZS5sb2coJ0F0dGVtcHRpbmcgdG8gY3JlYXRlIGRhdGFiYXNlIHNjaGVtYS4uLicpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFRyeSB0byBjcmVhdGUgYSB0ZXN0IHJlY29yZCB0byB0cmlnZ2VyIHRhYmxlIGNyZWF0aW9uXHJcbiAgICAgICAgYXdhaXQgcHJpc21hLnByb2plY3Rpb24uY3JlYXRlKHtcclxuICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgcHJvamVjdElkOiAnX190ZXN0X18nLFxyXG4gICAgICAgICAgICBtb250aDogJ19fdGVzdF9fJyxcclxuICAgICAgICAgICAgdmFsdWU6IDBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBJZiBzdWNjZXNzZnVsLCBkZWxldGUgdGhlIHRlc3QgcmVjb3JkXHJcbiAgICAgICAgYXdhaXQgcHJpc21hLnByb2plY3Rpb24uZGVsZXRlTWFueSh7XHJcbiAgICAgICAgICB3aGVyZToge1xyXG4gICAgICAgICAgICBwcm9qZWN0SWQ6ICdfX3Rlc3RfXycsXHJcbiAgICAgICAgICAgIG1vbnRoOiAnX190ZXN0X18nXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIHNjaGVtYSBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpO1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9IGNhdGNoIChjcmVhdGVFcnJvcjogYW55KSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBkYXRhYmFzZSBzY2hlbWE6JywgY3JlYXRlRXJyb3IpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygnVGFibGVzIGRvIG5vdCBleGlzdCwgYnV0IFByaXNtYSBBY2NlbGVyYXRlIHdpbGwgY3JlYXRlIHRoZW0gYXV0b21hdGljYWxseScpO1xyXG4gICAgY29uc29sZS5sb2coJ05vdGU6IFdpdGggUHJpc21hIEFjY2VsZXJhdGUsIHRhYmxlcyBhcmUgY3JlYXRlZCBhdXRvbWF0aWNhbGx5IHdoZW4geW91IGZpcnN0IGluc2VydCBkYXRhJyk7XHJcbiAgICByZXR1cm4gZmFsc2U7IC8vIFRhYmxlcyBkb24ndCBleGlzdCB5ZXRcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVEYXRhYmFzZVNjaGVtYSgpIHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ0NyZWF0aW5nIGRhdGFiYXNlIHNjaGVtYS4uLicpO1xyXG4gICAgXHJcbiAgICAvLyBUaGlzIHdpbGwgY3JlYXRlIGFsbCB0YWJsZXMgZGVmaW5lZCBpbiB0aGUgc2NoZW1hXHJcbiAgICAvLyBXZSdsbCB1c2UgYSBtb3JlIGRpcmVjdCBhcHByb2FjaCBieSB0cnlpbmcgdG8gY3JlYXRlIHRoZSBzY2hlbWFcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGVuc3VyZURhdGFiYXNlU2NoZW1hKCk7XHJcbiAgICBcclxuICAgIGlmIChyZXN1bHQpIHtcclxuICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIHNjaGVtYSBjcmVhdGlvbiBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2Ugc2NoZW1hIGNyZWF0aW9uIGZhaWxlZCcpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIHNjaGVtYSBjcmVhdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgcHJpc21hIH07XHJcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJlbnN1cmVEYXRhYmFzZVNjaGVtYSIsInByb2plY3Rpb24iLCJmaW5kRmlyc3QiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJjb2RlIiwibWVzc2FnZSIsImluY2x1ZGVzIiwiY3JlYXRlIiwiZGF0YSIsInByb2plY3RJZCIsIm1vbnRoIiwidmFsdWUiLCJkZWxldGVNYW55Iiwid2hlcmUiLCJjcmVhdGVFcnJvciIsImNyZWF0ZURhdGFiYXNlU2NoZW1hIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fasr-fees%2Froute&page=%2Fapi%2Fasr-fees%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fasr-fees%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();