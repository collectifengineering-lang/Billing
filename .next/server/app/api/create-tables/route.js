"use strict";(()=>{var e={};e.id=148,e.ids=[148],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},46541:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>_,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>u,dynamic:()=>i});var a=r(49303),o=r(88716),n=r(60670),c=r(87070),l=r(52663);let i="force-dynamic";async function u(){try{console.log("Attempting to create tables...");try{let e=await l.Z.status.create({data:{projectId:"__test__",month:"__test__",status:"test"}});return console.log("Test record created successfully:",e),await l.Z.status.delete({where:{projectId_month:{projectId:"__test__",month:"__test__"}}}),console.log("Test record cleaned up successfully"),c.NextResponse.json({success:!0,message:"Tables created successfully"})}catch(e){return console.error("Error creating tables:",e),c.NextResponse.json({error:"Failed to create tables",details:e.message},{status:500})}}catch(e){return console.error("Database setup failed:",e),c.NextResponse.json({error:"Database setup failed",details:e.message},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/create-tables/route",pathname:"/api/create-tables",filename:"route",bundlePath:"app/api/create-tables/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\create-tables\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:g}=p,_="/api/create-tables/route";function h(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},52663:(e,t,r)=>{r.d(t,{Z:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient({log:["error"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,972],()=>r(46541));module.exports=s})();