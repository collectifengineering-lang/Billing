"use strict";(()=>{var e={};e.id=426,e.ids=[426],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2543:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var a={};t.r(a),t.d(a,{GET:()=>p,POST:()=>u});var s=t(49303),o=t(88716),n=t(60670),i=t(87070),l=t(80928);async function p(e){try{let{searchParams:r}=new URL(e.url),t=r.get("employeeId"),a=r.get("date");if(t&&a){let e=await l.HE.getEmployeeSalary(t,a);return i.NextResponse.json(e)}if(!t)return i.NextResponse.json({error:"employeeId parameter is required"},{status:400});{let e=await l.HE.getEmployeeSalaryHistory(t);return i.NextResponse.json(e)}}catch(e){return console.error("Error fetching salary:",e),i.NextResponse.json({error:e.message},{status:500})}}async function u(e){try{let r=await e.json();return await l.HE.addSalary(r),i.NextResponse.json({success:!0,message:"Salary added successfully"})}catch(e){return console.error("Error adding salary:",e),i.NextResponse.json({error:e.message},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/payroll/salaries/route",pathname:"/api/payroll/salaries",filename:"route",bundlePath:"app/api/payroll/salaries/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\payroll\\salaries\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:y,serverHooks:m}=d,g="/api/payroll/salaries/route";function x(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972,928],()=>t(2543));module.exports=a})();