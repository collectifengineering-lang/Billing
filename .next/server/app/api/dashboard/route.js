"use strict";(()=>{var e={};e.id=707,e.ids=[707],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},74175:e=>{e.exports=require("tty")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},5758:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>k,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var o={};r.r(o),r.d(o,{GET:()=>u});var s=r(49303),a=r(88716),i=r(60670),n=r(87070),c=r(87707),l=r(88403);async function u(e){try{let e=new Date,t=e.getFullYear(),r=l.ZP.getConfigurationStatus();console.log("Clockify service configuration:",r),r.configured||console.warn("Clockify service not configured - using mock data for time tracking metrics");let o=[],s=[];try{o=await c.VC.getProjects(),s=await c.VC.getInvoices()}catch(e){return console.error("Failed to fetch Zoho data:",e),n.NextResponse.json({error:"Failed to fetch financial data from Zoho"},{status:500})}let a=.85,i=185;try{if(r.configured){await l.ZP.getUser(),await l.ZP.getProjects();try{let r=await l.ZP.getAllTimeEntries(new Date(t,0,1).toISOString(),e.toISOString()),o=r.reduce((e,t)=>{let r=t.timeInterval?.duration||"PT0H",o=h(r);return e+o},0),s=r.filter(e=>e.billable).reduce((e,t)=>{let r=t.timeInterval?.duration||"PT0H",o=h(r);return e+o},0);a=o>0?s/o:.85;let n=r.filter(e=>e.billable);n.length>0&&(i=n.reduce((e,t)=>{let r=t.hourlyRate?.amount||150;return e+r},0)/n.length)}catch(e){console.warn("Failed to calculate utilization rate from Clockify, using defaults:",e)}}else console.log("Using mock utilization data due to Clockify not being configured")}catch(e){console.warn("Failed to fetch Clockify data, using defaults:",e)}let u=o.filter(e=>"active"===e.status),d=u.reduce((e,t)=>e+(t.budget_amount||0),0),p=s.filter(e=>"paid"===e.status),m=s.filter(e=>"sent"===e.status||"viewed"===e.status),g=p.reduce((e,t)=>e+(t.total||0),0),f=m.reduce((e,t)=>e+(t.total||0),0),k=s.filter(e=>new Date(e.date).getFullYear()===t).reduce((e,t)=>e+(t.total||0),0),y=.25*k,w={currentYearMultiplier:2.8,lastYearMultiplier:2.6,twoYearsAgoMultiplier:2.4,currentYearOverhead:.35,lastYearOverhead:.37,twoYearsAgoOverhead:.39,currentYearRevenuePerEmployee:25e4,lastYearRevenuePerEmployee:235e3,twoYearsAgoRevenuePerEmployee:22e4,currentCashflow:g-f,previousMonthCashflow:.8*g-.8*f,cashflowTrend:"up",overdueInvoiceValue:.3*f,totalOutstandingInvoices:f,averageDaysToPayment:45,ytdProfit:y,lastYearYtdProfit:.9*y,currentYearGrossMargin:.35,lastYearGrossMargin:.33,ytdOperatingIncome:.8*y,lastYearYtdOperatingIncome:.8*y*.9,trailing12Months:Array.from({length:12},(e,r)=>{let o=new Date(t,r,1).toLocaleDateString("en-US",{month:"short"}),s=k/12*(.8+.4*Math.random()),a=.65*s,i=s-a;return{month:o,revenue:Math.round(s),expenses:Math.round(a),profit:Math.round(i),profitMargin:i/s}}),forecast:Array.from({length:6},(e,r)=>{let o=new Date(t,11+r,1).toLocaleDateString("en-US",{month:"short"}),s=k/12*(1.1+.2*Math.random()),a=.65*s;return{month:o,projectedRevenue:Math.round(s),projectedExpenses:Math.round(a),projectedProfit:Math.round(s-a)}}),utilizationRate:a,averageProjectSize:d/Math.max(u.length,1),clientRetentionRate:.85,averageBillingRate:i,totalActiveProjects:u.length,totalEmployees:12};return n.NextResponse.json(w)}catch(e){return console.error("Dashboard API error:",e),n.NextResponse.json({error:"Failed to generate dashboard data"},{status:500})}}function h(e){if(!e)return 0;let t=e.match(/PT(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?/);return t?parseInt(t[1]||"0")+parseInt(t[2]||"0")/60+parseInt(t[3]||"0")/3600:0}let d=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/dashboard/route",pathname:"/api/dashboard",filename:"route",bundlePath:"app/api/dashboard/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\dashboard\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:m,serverHooks:g}=d,f="/api/dashboard/route";function k(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},88403:(e,t,r)=>{r.d(t,{ZP:()=>a,e1:()=>s,wu:()=>i});class o{constructor(){this.apiKey=null,this.workspaceId=null,this.baseUrl="https://api.clockify.me/api/v1",this._isConfigured=!1,this.apiKey=process.env.CLOCKIFY_API_KEY||null,this.workspaceId=process.env.CLOCKIFY_WORKSPACE_ID||null,this.apiKey&&"your_clockify_api_key_here"!==this.apiKey&&this.workspaceId&&"your_clockify_workspace_id_here"!==this.workspaceId?(this._isConfigured=!0,console.log("Clockify service initialized with valid credentials")):(this._isConfigured=!1,console.warn("Clockify service initialized without valid credentials - will use mock data"),console.warn("Please set CLOCKIFY_API_KEY and CLOCKIFY_WORKSPACE_ID in your environment variables"))}getHeaders(){if(!this.apiKey)throw Error("Clockify API key not configured");return{"X-Api-Key":this.apiKey,"Content-Type":"application/json"}}async makeRequest(e,t){if(!this._isConfigured)throw Error("Clockify service not properly configured");try{let r=new URL(`${this.baseUrl}${e}`);t&&Object.keys(t).forEach(e=>{void 0!==t[e]&&null!==t[e]&&r.searchParams.append(e,t[e])});let o=await fetch(r.toString(),{method:"GET",headers:this.getHeaders()});if(401===o.status)throw Error("Clockify API authentication failed - check your API key");if(403===o.status)throw Error("Clockify API access forbidden - check your workspace ID and permissions");if(429===o.status)throw Error("Clockify API rate limit exceeded - try again later");if(!o.ok)throw Error(`Clockify API error: ${o.status} ${o.statusText}`);return await o.json()}catch(e){if(e instanceof Error)throw e;throw Error(`Clockify API request failed: ${e}`)}}isConfigured(){return this._isConfigured}getConfigurationStatus(){return{configured:this._isConfigured,hasApiKey:!!(this.apiKey&&"your_clockify_api_key_here"!==this.apiKey),hasWorkspaceId:!!(this.workspaceId&&"your_clockify_workspace_id_here"!==this.workspaceId)}}getConfigStatus(){return this.getConfigurationStatus()}setWorkspaceId(e){this.workspaceId=e,this.apiKey&&"your_clockify_api_key_here"!==this.apiKey&&(this._isConfigured=!0)}async getUser(){try{return await this.makeRequest("/user")}catch(e){return console.error("Failed to get Clockify user:",e),{id:"mock-user-id",name:"Mock User",email:"user@example.com",status:"ACTIVE"}}}async getWorkspaces(){try{return await this.makeRequest("/workspaces")}catch(e){return console.error("Failed to get Clockify workspaces:",e),[{id:"mock-workspace-id",name:"Mock Workspace",hourlyRate:{amount:100,currency:"USD"}}]}}async getProjects(){try{if(!this.workspaceId)throw Error("Workspace ID not configured");return await this.makeRequest(`/workspaces/${this.workspaceId}/projects`)}catch(e){return console.error("Failed to get Clockify projects:",e),[{id:"mock-project-1",name:"Mock Project 1",clientId:"mock-client-1",clientName:"Mock Client 1",status:"ACTIVE",billable:!0,hourlyRate:{amount:150,currency:"USD"}},{id:"mock-project-2",name:"Mock Project 2",clientId:"mock-client-2",clientName:"Mock Client 2",status:"ACTIVE",billable:!0,hourlyRate:{amount:175,currency:"USD"}}]}}async getTimeEntries(e,t,r){try{if(!this.workspaceId)throw Error("Workspace ID not configured");return await this.makeRequest(`/workspaces/${this.workspaceId}/projects/${e}/time-entries`,{start:t,end:r})}catch(e){return console.error("Failed to get Clockify time entries:",e),[{id:"mock-time-entry-1",description:"Mock work session",timeInterval:{start:t,end:r,duration:"PT2H30M"},billable:!0,userId:"mock-user-id",userName:"Mock User"}]}}async getAllTimeEntries(e,t){try{if(!this.workspaceId)throw Error("Workspace ID not configured");return await this.makeRequest(`/workspaces/${this.workspaceId}/time-entries`,{start:e,end:t})}catch(r){return console.error("Failed to get all Clockify time entries:",r),[{id:"mock-time-entry-1",description:"Mock work session",timeInterval:{start:e,end:t,duration:"PT8H0M"},billable:!0,userId:"mock-user-id",userName:"Mock User",projectId:"mock-project-1",projectName:"Mock Project 1"}]}}async getUsers(){try{if(!this.workspaceId)throw Error("Workspace ID not configured");return await this.makeRequest(`/workspaces/${this.workspaceId}/users`)}catch(e){return console.error("Failed to get Clockify users:",e),[{id:"mock-user-1",name:"Mock User 1",email:"user1@example.com",status:"ACTIVE",hourlyRate:{amount:100,currency:"USD"}},{id:"mock-user-2",name:"Mock User 2",email:"user2@example.com",status:"ACTIVE",hourlyRate:{amount:120,currency:"USD"}}]}}async getProjectTimeReport(e,t,r){try{if(!this.workspaceId)throw Error("Workspace ID not configured");let o=await this.getTimeEntries(e,t,r),s=await this.getProjects().then(t=>t.find(t=>t.id===e));if(!s)throw Error("Project not found");let a=o.reduce((e,t)=>{let r=t.timeInterval.duration,o=this.parseDuration(r);return e+o},0),i=o.filter(e=>e.billable).reduce((e,t)=>{let r=t.timeInterval.duration,o=this.parseDuration(r);return e+o},0),n=a-i;return{projectId:e,projectName:s.name,totalHours:a,billableHours:i,nonBillableHours:n,totalAmount:a*(s.hourlyRate?.amount||0),billableAmount:i*(s.hourlyRate?.amount||0),nonBillableAmount:n*(s.hourlyRate?.amount||0),entries:o,period:{start:t,end:r}}}catch(e){return console.error("Failed to get project time report:",e),null}}async getAllProjectsTimeSummary(e,t){try{if(!this.workspaceId)throw Error("Workspace ID not configured");let r=await this.getProjects(),o=[];for(let s of r){let r=await this.getProjectTimeReport(s.id,e,t);r&&o.push(r)}return o}catch(e){return console.error("Failed to get all projects time summary:",e),[]}}parseDuration(e){let t=e.match(/PT(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?/);return t?parseInt(t[1]||"0")+parseInt(t[2]||"0")/60+parseInt(t[3]||"0")/3600:0}}let s=new o,a=s,i=async(e,t)=>{try{return await s.getAllProjectsTimeSummary(e,t)}catch(e){return console.error("Error fetching Clockify time summaries:",e),[]}}},87707:(e,t,r)=>{r.d(t,{VC:()=>a});var o=r(29712);class s{constructor(){this.accessToken=null,this.tokenExpiry=0,this.refreshPromise=null,this.TOKEN_REFRESH_BUFFER=3e5,this.autoRefreshTimer=null,this.AUTO_REFRESH_INTERVAL=27e5,this.lastRefreshTime=0,this._startAutoRefresh()}_startAutoRefresh(){this.autoRefreshTimer&&clearInterval(this.autoRefreshTimer),this.autoRefreshTimer=setInterval(async()=>{try{console.log("Auto-refreshing Zoho token (45-minute interval)..."),this.lastRefreshTime=Date.now(),await this.forceRefreshToken(),console.log("Auto-refresh completed successfully")}catch(e){console.error("Auto-refresh failed:",e)}},this.AUTO_REFRESH_INTERVAL),this.lastRefreshTime=Date.now(),console.log("Automatic Zoho token refresh started (every 45 minutes)")}_stopAutoRefresh(){this.autoRefreshTimer&&(clearInterval(this.autoRefreshTimer),this.autoRefreshTimer=null,console.log("Automatic Zoho token refresh stopped"))}async getAccessToken(){if(this.accessToken&&Date.now()<this.tokenExpiry-this.TOKEN_REFRESH_BUFFER)return this.accessToken;if(this.refreshPromise)return this.refreshPromise;this.refreshPromise=this.refreshAccessToken();try{return await this.refreshPromise}finally{this.refreshPromise=null}}async refreshAccessToken(){try{console.log("Refreshing Zoho access token...");let e=new URLSearchParams;e.append("refresh_token","1000.4bf26c4881dfba83aae32546453d662d.a9353e91362a18c457b5cbec86b10ed2"),e.append("client_id","1000.8RL8WMTDXS0WIP2EJF2XUS6NDSLQEP"),e.append("client_secret","8a7ee3c04f0a0d860dd215c4449deab9bf15d1d00b"),e.append("grant_type","refresh_token");let t=await o.Z.post("https://accounts.zoho.com/oauth/v2/token",e,{headers:{"Content-Type":"application/x-www-form-urlencoded"}});return this.accessToken=t.data.access_token,this.tokenExpiry=Date.now()+1e3*t.data.expires_in,console.log(`Token refreshed successfully. Expires in ${Math.round(t.data.expires_in/60)} minutes`),this.accessToken}catch(e){throw console.error("Error refreshing Zoho access token:",e),Error("Failed to authenticate with Zoho")}}async makeRequest(e){let t=await this.getAccessToken();try{return(await o.Z.get(`https://www.zohoapis.com/books/v3/${e}`,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},params:{organization_id:"652094923"}})).data}catch(t){if(t.response?.status===401){console.log("Token expired, refreshing..."),this.accessToken=null,this.tokenExpiry=0;let t=await this.getAccessToken();return(await o.Z.get(`https://www.zohoapis.com/books/v3/${e}`,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},params:{organization_id:"652094923"}})).data}throw console.error(`Error making Zoho request to ${e}:`,t),Error(`Failed to fetch data from Zoho: ${e}`)}}async getProjects(){try{let e=[],t=1;for(;;){let r=await this.makeRequest(`projects?page=${t}&per_page=200`),o=r.projects?.map(r=>(1===t&&0===e.length&&console.log("Sample Zoho project data:",JSON.stringify(r,null,2)),{project_id:r.project_id,project_name:r.project_name||r.name||"",description:r.description||"",status:r.status||"active",start_date:r.start_date||"",end_date:r.end_date||"",budget_amount:r.budget_amount||0,rate_per_hour:r.rate_per_hour||0,customer_id:r.customer_id||"",customer_name:r.customer_name||"",signed_fee:void 0}))||[];if(e=e.concat(o),o.length<200)break;t++}return console.log(`Fetched ${e.length} projects from Zoho`),e}catch(e){return console.error("Error fetching projects:",e),[]}}async getProjectsWithRevenueBudget(){try{console.log("Fetching projects with revenue budget data...");let e=await this.getProjects(),t=e.filter(e=>{let t=e.signed_fee&&e.signed_fee>0;return t&&console.log(`Project ${e.project_name} has revenue budget: $${e.signed_fee}`),t});return console.log(`Found ${t.length} projects with revenue budget data`),e}catch(e){return console.error("Error fetching projects with revenue budget:",e),[]}}async debugProjectFields(){try{console.log("Debugging Zoho project fields...");let e=await this.makeRequest("projects?page=1&per_page=5");if(e.projects&&e.projects.length>0){console.log("Available fields in Zoho project response:");let t=e.projects[0];Object.keys(t).forEach(e=>{console.log(`  ${e}: ${t[e]} (${typeof t[e]})`)}),void 0!==t.revenue_budget?console.log(`✅ Found revenue_budget field: ${t.revenue_budget}`):(console.log("❌ revenue_budget field not found in Zoho response"),console.log("Available budget-related fields:"),Object.keys(t).forEach(e=>{(e.toLowerCase().includes("budget")||e.toLowerCase().includes("revenue"))&&console.log(`  ${e}: ${t[e]}`)}))}else console.log("No projects found in Zoho response")}catch(e){console.error("Error debugging project fields:",e)}}async getProjectsWithEstimates(){try{let e=await this.getProjects();return[...await Promise.all(e.slice(0,5).map(async e=>{try{let t=await this.getProjectEstimates(e.project_id),r=t.reduce((e,t)=>e+(t.total||0),0);return console.log(`Project ${e.project_name} estimates:`,t.length,"total amount:",r),{...e,signed_fee:e.signed_fee||r||0}}catch(t){return console.error(`Error fetching estimates for project ${e.project_id}:`,t),e}})),...e.slice(5)]}catch(e){return console.error("Error fetching projects with estimates:",e),[]}}async getProjectsWithInvoiceTotals(){try{let[e,t]=await Promise.all([this.getProjects(),this.getInvoices()]);return e.map(e=>{let r=t.filter(t=>t.project_id===e.project_id),o=r.reduce((e,t)=>e+t.amount,0);return console.log(`Project ${e.project_name} invoices:`,r.length,"total amount:",o),{...e,signed_fee:e.signed_fee||o||0}})}catch(e){return console.error("Error fetching projects with invoice totals:",e),[]}}async getInvoices(){try{let e=await this.makeRequest("invoices");return e.invoices?.map(e=>({invoice_id:e.invoice_id,project_id:e.project_id,invoice_number:e.invoice_number,date:e.date,amount:e.total,status:e.status,billed_amount:e.billed_amount||0,unbilled_amount:e.unbilled_amount||0}))||[]}catch(e){return console.error("Error fetching invoices:",e),[]}}async getProjectInvoices(e){try{let t=await this.makeRequest(`projects/${e}/invoices`);return t.invoices?.map(e=>({invoice_id:e.invoice_id,project_id:e.project_id,invoice_number:e.invoice_number,date:e.date,amount:e.total,status:e.status,billed_amount:e.billed_amount||0,unbilled_amount:e.unbilled_amount||0}))||[]}catch(e){return console.error("Error fetching project invoices:",e),[]}}async getProjectDetails(e){try{let t=await this.makeRequest(`projects/${e}`);return console.log(`Project ${e} details:`,JSON.stringify(t,null,2)),t}catch(e){return console.error("Error fetching project details:",e),null}}async getProjectEstimates(e){try{let t=await this.makeRequest(`projects/${e}/estimates`);return console.log(`Project ${e} estimates:`,JSON.stringify(t,null,2)),t.estimates||[]}catch(e){return console.error("Error fetching project estimates:",e),[]}}async getProjectContracts(e){try{let t=await this.makeRequest(`projects/${e}/contracts`);return console.log(`Project ${e} contracts:`,JSON.stringify(t,null,2)),t.contracts||[]}catch(e){return console.error("Error fetching project contracts:",e),[]}}async forceRefreshToken(){this.accessToken=null,this.tokenExpiry=0,this.lastRefreshTime=Date.now(),await this.getAccessToken()}getTokenStatus(){let e=Date.now();return{hasToken:!!this.accessToken,expiresIn:this.tokenExpiry-e,isExpired:e>=this.tokenExpiry}}getAutoRefreshStatus(){let e=Date.now()-this.lastRefreshTime,t=Math.max(0,this.AUTO_REFRESH_INTERVAL-e);return{isActive:!!this.autoRefreshTimer,nextRefreshIn:t}}enableAutoRefresh(){this._startAutoRefresh()}disableAutoRefresh(){this._stopAutoRefresh()}getStatus(){return{...this.getTokenStatus(),autoRefresh:this.getAutoRefreshStatus()}}}let a=new s}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[276,972,712],()=>r(5758));module.exports=o})();