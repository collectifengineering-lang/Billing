"use strict";(()=>{var e={};e.id=8816,e.ids=[8816],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},30111:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>y,staticGenerationAsyncStorage:()=>m});var o={};a.r(o),a.d(o,{GET:()=>p,dynamic:()=>i});var r=a(49303),n=a(88716),s=a(60670),l=a(87070),c=a(24544);let i="force-dynamic";async function p(){if(!process.env.VERCEL_ENV)return l.NextResponse.json({success:!1,message:"Database connection skipped during build"});if(!c._B)return l.NextResponse.json({success:!1,message:"Prisma client not available"},{status:500});try{console.log("DATABASE_URL (redacted):",process.env.DATABASE_URL?.replace(/\/\/.*@/,"//[redacted]@")||"Not set"),console.log("Testing database connection...");let e=await c._B.$queryRaw`SELECT 1 as test`;return console.log("Database connection successful:",e),l.NextResponse.json({success:!0,message:"Database connection successful",result:e})}catch(e){return console.error("Database connection failed:",e),console.error("DATABASE_URL (redacted):",process.env.DATABASE_URL?.replace(/\/\/.*@/,"//[redacted]@")||"Not set"),l.NextResponse.json({error:"Database connection failed",details:e instanceof Error?e.message:"Unknown error",code:e instanceof Error&&"code"in e?e.code:void 0,stack:e instanceof Error?e.stack:void 0},{status:500})}}let u=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/db-test/route",pathname:"/api/db-test",filename:"route",bundlePath:"app/api/db-test/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\db-test\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:y}=u,f="/api/db-test/route";function h(){return(0,s.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:m})}},24544:(e,t,a)=>{a.d(t,{DD:()=>d,K7:()=>c,XA:()=>u,Xp:()=>r,Y0:()=>m,_B:()=>o.Z,eC:()=>i,eK:()=>n,jv:()=>p,lA:()=>l,te:()=>s});var o=a(9487);async function r(){try{return await o.Z.projection.findFirst(),console.log("Database schema already exists"),!0}catch(e){if(console.log("Tables do not exist, attempting to create schema..."),"P2021"===e.code||e.message?.includes("does not exist"))try{return console.log("Attempting to create database schema..."),await o.Z.projection.create({data:{projectId:"__test__",month:"__test__",value:0}}),await o.Z.projection.deleteMany({where:{projectId:"__test__",month:"__test__"}}),console.log("Database schema created successfully"),!0}catch(e){return console.error("Failed to create database schema:",e),!1}return console.log("Tables do not exist, but Prisma Accelerate will create them automatically"),console.log("Note: With Prisma Accelerate, tables are created automatically when you first insert data"),!1}}async function n(){try{if(console.log("Creating database schema..."),await r())return console.log("Database schema creation completed successfully"),!0;return console.error("Database schema creation failed"),!1}catch(e){return console.error("Database schema creation failed:",e),!1}}async function s(e){try{let t=await o.Z.bambooHRConfig.upsert({where:{subdomain:e.subdomain},update:{apiKey:e.apiKey,webhookSecret:e.webhookSecret,isActive:!0,lastSync:new Date,updatedAt:new Date},create:{subdomain:e.subdomain,apiKey:e.apiKey,webhookSecret:e.webhookSecret,isActive:!0,lastSync:new Date}});return console.log(`BambooHR config saved for subdomain: ${e.subdomain}`),t}catch(e){throw console.error("Error saving BambooHR config:",e),e}}async function l(e){try{console.log(`🔄 Attempting to upsert employee:`,JSON.stringify(e,null,2));let t=await o.Z.employee.upsert({where:{id:e.id},update:{name:e.name,email:e.email,status:e.status,department:e.department,position:e.position,hireDate:e.hireDate,terminationDate:e.terminationDate,updatedAt:new Date},create:{id:e.id,name:e.name,email:e.email,status:e.status,department:e.department,position:e.position,hireDate:e.hireDate,terminationDate:e.terminationDate}});return console.log(`✅ Employee saved: ${e.name} (${e.id})`),t}catch(t){if(console.error("❌ Error saving employee:",t),"P2025"===t.code){console.log(`🔄 Record not found, attempting to create employee: ${e.name} (${e.id})`);try{let t=await o.Z.employee.create({data:{id:e.id,name:e.name,email:e.email,status:e.status,department:e.department,position:e.position,hireDate:e.hireDate,terminationDate:e.terminationDate}});return console.log(`✅ Employee created: ${e.name} (${e.id})`),t}catch(e){throw console.error("❌ Error creating employee:",e),e}}throw t}}async function c(e){try{console.log(`🔄 Attempting to upsert employee salary:`,JSON.stringify(e,null,2));let t=await o.Z.employeeSalary.upsert({where:{employeeId_effectiveDate:{employeeId:e.employeeId,effectiveDate:e.effectiveDate}},update:{endDate:e.endDate,annualSalary:e.annualSalary,hourlyRate:e.hourlyRate,currency:e.currency,notes:e.notes,source:e.source,updatedAt:new Date},create:{employeeId:e.employeeId,effectiveDate:e.effectiveDate,endDate:e.endDate,annualSalary:e.annualSalary,hourlyRate:e.hourlyRate,currency:e.currency||"USD",notes:e.notes,source:e.source||"bamboohr"}});return console.log(`✅ Employee salary saved for ${e.employeeId} effective ${e.effectiveDate}`),t}catch(t){if(console.error("❌ Error saving employee salary:",t),"P2025"===t.code){console.log(`🔄 Record not found, attempting to create employee salary for ${e.employeeId} effective ${e.effectiveDate}`);try{let t=await o.Z.employeeSalary.create({data:{employeeId:e.employeeId,effectiveDate:e.effectiveDate,endDate:e.endDate,annualSalary:e.annualSalary,hourlyRate:e.hourlyRate,currency:e.currency||"USD",notes:e.notes,source:e.source||"bamboohr"}});return console.log(`✅ Employee salary created for ${e.employeeId} effective ${e.effectiveDate}`),t}catch(e){throw console.error("❌ Error creating employee salary:",e),e}}throw t}}async function i(e){try{let t=await o.Z.projectMultiplier.upsert({where:{projectId_effectiveDate:{projectId:e.projectId,effectiveDate:e.effectiveDate}},update:{projectName:e.projectName,multiplier:e.multiplier,endDate:e.endDate,notes:e.notes,updatedAt:new Date},create:{projectId:e.projectId,projectName:e.projectName,multiplier:e.multiplier,effectiveDate:e.effectiveDate,endDate:e.endDate,notes:e.notes}});return console.log(`Project multiplier saved for ${e.projectName} effective ${e.effectiveDate}`),t}catch(e){throw console.error("Error saving project multiplier:",e),e}}async function p(e){try{let t=await o.Z.employeeTimeEntry.upsert({where:{employeeId_projectId_date:{employeeId:e.employeeId,projectId:e.projectId,date:e.date}},update:{employeeName:e.employeeName,projectName:e.projectName,hours:e.hours,billableHours:e.billableHours,nonBillableHours:e.nonBillableHours,hourlyRate:e.hourlyRate,projectMultiplier:e.projectMultiplier,totalCost:e.totalCost,billableValue:e.billableValue,efficiency:e.efficiency,description:e.description,tags:e.tags,updatedAt:new Date},create:{employeeId:e.employeeId,employeeName:e.employeeName,projectId:e.projectId,projectName:e.projectName,date:e.date,hours:e.hours,billableHours:e.billableHours,nonBillableHours:e.nonBillableHours,hourlyRate:e.hourlyRate,projectMultiplier:e.projectMultiplier,totalCost:e.totalCost,billableValue:e.billableValue,efficiency:e.efficiency,description:e.description,tags:e.tags}});return console.log(`Time entry saved for ${e.employeeName} on ${e.date}`),t}catch(e){throw console.error("Error saving time entry:",e),e}}async function u(){try{return await o.Z.employee.findMany({include:{salaries:!0}})}catch(e){throw console.error("Error getting all employees:",e),e}}async function d(){try{return await o.Z.employeeSalary.findMany({include:{employee:!0}})}catch(e){throw console.error("Error getting all employee salaries:",e),e}}async function m(){try{return await o.Z.projectMultiplier.findMany()}catch(e){throw console.error("Error getting all project multipliers:",e),e}}},9487:(e,t,a)=>{a.d(t,{Z:()=>r});var o=a(53524);let r=globalThis.prisma??new o.PrismaClient({log:["error"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),o=t.X(0,[9276,5972],()=>a(30111));module.exports=o})();