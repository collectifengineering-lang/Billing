"use strict";(()=>{var e={};e.id=529,e.ids=[529],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},74175:e=>{e.exports=require("tty")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},6455:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>u,POST:()=>l});var o=r(49303),a=r(88716),i=r(60670),n=r(87070),c=r(88403);async function u(e){try{let{searchParams:t}=new URL(e.url),r=t.get("startDate"),s=t.get("endDate"),o=t.get("action");if(!c.e1.isConfigured())return n.NextResponse.json({error:"Clockify not configured",configStatus:c.e1.getConfigStatus()},{status:400});switch(o){case"status":return n.NextResponse.json({configured:c.e1.isConfigured(),configStatus:c.e1.getConfigStatus()});case"projects":let a=await c.e1.getProjects();return n.NextResponse.json({projects:a});case"time-summaries":if(!r||!s)return n.NextResponse.json({error:"startDate and endDate are required for time summaries"},{status:400});let i=await (0,c.wu)(r,s);return n.NextResponse.json({timeSummaries:i});case"user":let u=await c.e1.getUser();return n.NextResponse.json({user:u});case"workspaces":let l=await c.e1.getWorkspaces();return n.NextResponse.json({workspaces:l});case"test-connection":try{let e=await c.e1.getUser(),t=await c.e1.getWorkspaces();return n.NextResponse.json({success:!0,user:e,workspaces:t,message:"Connection successful"})}catch(e){return n.NextResponse.json({success:!1,error:e.message},{status:400})}default:return n.NextResponse.json({error:"Invalid action. Supported actions: status, projects, time-summaries, user, workspaces, test-connection"},{status:400})}}catch(e){return console.error("Clockify API error:",e),n.NextResponse.json({error:e.message||"Failed to fetch Clockify data"},{status:500})}}async function l(e){try{let{action:t,data:r}=await e.json();switch(t){case"enhance-billing-data":let{billingData:s,clockifyReports:o}=r,a=s.map(e=>{let t=o.find(t=>t.projectId===e.projectId||t.projectName.toLowerCase().includes(e.projectName.toLowerCase()));if(t){let r=function(e){let t=e.totalHours>0?e.billableHours/e.totalHours:0,r=e.billableHours>0?e.billableAmount/e.billableHours:0;return{projectId:e.projectId,projectName:e.projectName,totalHours:e.totalHours,billableHours:e.billableHours,nonBillableHours:e.nonBillableHours,hourlyRate:r,totalValue:e.billableAmount,efficiency:t,period:e.period}}(t);return{...e,clockifyData:t,totalHours:t.totalHours,billableHours:t.billableHours,nonBillableHours:t.nonBillableHours,hourlyRate:r.hourlyRate,efficiency:r.efficiency}}return e});return n.NextResponse.json({enhancedData:a});case"set-workspace":let{workspaceId:i}=r;if(i)return c.e1.setWorkspaceId(i),n.NextResponse.json({success:!0,message:"Workspace set successfully"});return n.NextResponse.json({error:"Workspace ID is required"},{status:400});default:return n.NextResponse.json({error:"Invalid action. Supported actions: enhance-billing-data, set-workspace"},{status:400})}}catch(e){return console.error("Clockify POST error:",e),n.NextResponse.json({error:e.message||"Failed to process Clockify data"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/clockify/route",pathname:"/api/clockify",filename:"route",bundlePath:"app/api/clockify/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\clockify\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:g}=p,h="/api/clockify/route";function f(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},88403:(e,t,r)=>{r.d(t,{e1:()=>a,wu:()=>i});var s=r(29712);class o{constructor(){this.apiKey="OTg4NTg3YjMtMmQzYS00ZWE1LThiOTctZmY4NDAwYzRiZjZj",this.workspaceId=null,this.baseUrl="https://api.clockify.me/api/v1",console.log("Clockify service initialized with API key")}getHeaders(){return{"X-Api-Key":this.apiKey,"Content-Type":"application/json"}}async makeRequest(e,t){try{return(await s.Z.get(`${this.baseUrl}${e}`,{headers:this.getHeaders(),params:t})).data}catch(e){throw console.error("Clockify API error:",e.response?.data||e.message),Error(`Clockify API error: ${e.response?.data?.message||e.message}`)}}async getUser(){return this.makeRequest("/user")}async getWorkspaces(){return this.makeRequest("/workspaces")}async getProjects(e){if(!(e||this.workspaceId)){let e=await this.getWorkspaces();if(e.length>0)this.workspaceId=e[0].id,console.log(`Using workspace: ${e[0].name} (${e[0].id})`);else throw Error("No workspaces found")}return this.makeRequest(`/workspaces/${this.workspaceId}/projects`)}async getProjectTimeEntries(e,t,r,s){let o=s||this.workspaceId;if(!o)throw Error("Workspace ID not configured");let a={};return t&&(a.start=t),r&&(a.end=r),this.makeRequest(`/workspaces/${o}/projects/${e}/time-entries`,a)}async getUserTimeEntries(e,t,r,s){let o=s||this.workspaceId;if(!o)throw Error("Workspace ID not configured");let a={};return t&&(a.start=t),r&&(a.end=r),this.makeRequest(`/workspaces/${o}/user/${e}/time-entries`,a)}async getAllTimeEntries(e,t,r){let s=r||this.workspaceId;if(!s)throw Error("Workspace ID not configured");let o={};return e&&(o.start=e),t&&(o.end=t),this.makeRequest(`/workspaces/${s}/time-entries`,o)}async getProjectTimeReport(e,t,r,s){let o=await this.getProjectTimeEntries(e,t,r,s),a=await this.getProjectById(e,s),i=0,n=0,c=0,u=0,l=0,p=0;return o.forEach(e=>{let t=this.parseDuration(e.timeInterval.duration)/36e5;i+=t,e.billable?(n+=t,l+=e.costRate?.amount||0):(c+=t,p+=e.costRate?.amount||0),u+=e.costRate?.amount||0}),{projectId:e,projectName:a?.name||"Unknown Project",totalHours:i,billableHours:n,nonBillableHours:c,totalAmount:u,billableAmount:l,nonBillableAmount:p,entries:o,period:{start:t,end:r}}}async getProjectById(e,t){let r=t||this.workspaceId;if(!r)throw Error("Workspace ID not configured");try{return await this.makeRequest(`/workspaces/${r}/projects/${e}`)}catch(t){return console.error(`Project ${e} not found`),null}}async getProjectTimeSummary(e,t,r,s){let o=await this.getProjectTimeReport(e,t,r,s);return{projectId:o.projectId,projectName:o.projectName,totalHours:o.totalHours,billableHours:o.billableHours,nonBillableHours:o.nonBillableHours,totalAmount:o.totalAmount,billableAmount:o.billableAmount,nonBillableAmount:o.nonBillableAmount,period:o.period}}async getAllProjectsTimeSummary(e,t,r){let s=await this.getProjects(r),o=[];for(let a of s)try{let s=await this.getProjectTimeSummary(a.id,e,t,r);o.push(s)}catch(e){console.error(`Error getting summary for project ${a.id}:`,e)}return o}parseDuration(e){let t=e.match(/PT(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?/);return t?(3600*parseInt(t[1]||"0")+60*parseInt(t[2]||"0")+parseInt(t[3]||"0"))*1e3:0}isConfigured(){return!!this.apiKey}getConfigStatus(){return{apiKey:!!this.apiKey,workspaceId:!!this.workspaceId,configured:this.isConfigured()}}setWorkspaceId(e){this.workspaceId=e}}let a=new o,i=async(e,t)=>{try{return await a.getAllProjectsTimeSummary(e,t)}catch(e){return console.error("Error fetching Clockify time summaries:",e),[]}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[276,972,712],()=>r(6455));module.exports=s})();