"use strict";(()=>{var e={};e.id=3625,e.ids=[3625],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},17949:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>g,patchFetch:()=>w,requestAsyncStorage:()=>_,routeModule:()=>y,serverHooks:()=>h,staticGenerationAsyncStorage:()=>f});var o={};a.r(o),a.d(o,{DELETE:()=>m,GET:()=>p,POST:()=>u,dynamic:()=>d});var r=a(49303),n=a(88716),s=a(60670),c=a(87070),i=a(9487),l=a(24544);let d="force-dynamic";async function p(){try{if(!await (0,l.Xp)())return console.log("Tables do not exist yet, returning empty closed projects"),c.NextResponse.json([]);let e=(await i.Z.closedProject.findMany()).map(e=>e.projectId);return c.NextResponse.json(e)}catch(e){if(console.error("Error fetching closed projects:",e),e instanceof Error&&(e.message?.includes("does not exist")||"code"in e&&"P2021"===e.code))return console.log("Tables do not exist, returning empty closed projects"),c.NextResponse.json([]);if(e instanceof Error&&(e.message?.includes("ENOTFOUND")||e.message?.includes("ECONNREFUSED")))return console.error("Database connection failed, returning empty closed projects"),c.NextResponse.json([]);return c.NextResponse.json({error:"Failed to fetch closed projects",message:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function u(e){let{projectId:t}=await e.json();try{return await (0,l.Xp)()||(console.log("Tables do not exist yet, but Prisma Accelerate will create them on first insert"),console.log("Attempting to create table by inserting data...")),await i.Z.closedProject.upsert({where:{projectId:t},update:{},create:{projectId:t}}),c.NextResponse.json({success:!0})}catch(e){if(console.error("Error updating closed project:",e),e instanceof Error&&(e.message?.includes("does not exist")||"code"in e&&"P2021"===e.code)){console.log("Table does not exist, attempting to create schema...");try{return await i.Z.closedProject.create({data:{projectId:"__test__"}}),await i.Z.closedProject.deleteMany({where:{projectId:"__test__"}}),await i.Z.closedProject.upsert({where:{projectId:t},update:{},create:{projectId:t}}),c.NextResponse.json({success:!0})}catch(e){return console.error("Failed to create table:",e),c.NextResponse.json({error:"Database schema not ready. Please run database setup first."},{status:500})}}return c.NextResponse.json({error:"Failed to update closed project"},{status:500})}}async function m(e){let{projectId:t}=await e.json();try{return await i.Z.closedProject.delete({where:{projectId:t}}),c.NextResponse.json({success:!0})}catch(e){return console.error("Error removing closed project:",e),c.NextResponse.json({error:"Failed to remove closed project"},{status:500})}}let y=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/closed-projects/route",pathname:"/api/closed-projects",filename:"route",bundlePath:"app/api/closed-projects/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\closed-projects\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:_,staticGenerationAsyncStorage:f,serverHooks:h}=y,g="/api/closed-projects/route";function w(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:f})}},24544:(e,t,a)=>{a.d(t,{DD:()=>u,K7:()=>i,XA:()=>p,Xp:()=>r,Y0:()=>m,_B:()=>o.Z,eC:()=>l,eK:()=>n,jv:()=>d,lA:()=>c,te:()=>s});var o=a(9487);async function r(){try{return await o.Z.$connect(),console.log("Database connection successful"),await o.Z.projection.findFirst(),console.log("Database schema already exists"),!0}catch(e){if(console.error("Database connection or schema check failed:",e),e.message?.includes("ENOTFOUND")||e.message?.includes("ECONNREFUSED"))return console.error("‚ùå Database connection failed - check your DATABASE_URL"),console.error("   Current DATABASE_URL:",process.env.DATABASE_URL?"Set":"Not set"),!1;if("P2021"===e.code||e.message?.includes("does not exist"))try{return console.log("Tables do not exist, attempting to create schema..."),await o.Z.projection.create({data:{projectId:"__test__",month:"__test__",value:0}}),await o.Z.projection.deleteMany({where:{projectId:"__test__",month:"__test__"}}),console.log("Database schema created successfully"),!0}catch(e){return console.error("Failed to create database schema:",e),!1}return console.log("Tables do not exist, but Prisma Accelerate will create them automatically"),console.log("Note: With Prisma Accelerate, tables are created automatically when you first insert data"),!1}finally{await o.Z.$disconnect()}}async function n(){try{if(console.log("Creating database schema..."),await r())return console.log("Database schema creation completed successfully"),!0;return console.error("Database schema creation failed"),!1}catch(e){return console.error("Database schema creation failed:",e),!1}}async function s(e){try{let t=await o.Z.bamboohr_config.upsert({where:{subdomain:e.subdomain},update:{api_key:e.apiKey,webhook_secret:e.webhookSecret,is_active:!0,last_sync:new Date,updated_at:new Date},create:{subdomain:e.subdomain,api_key:e.apiKey,webhook_secret:e.webhookSecret,is_active:!0,last_sync:new Date,created_at:new Date,updated_at:new Date}});return console.log(`BambooHR config saved for subdomain: ${e.subdomain}`),t}catch(e){throw console.error("Error saving BambooHR config:",e),e}}async function c(e){try{console.log(`üîÑ Attempting to upsert employee:`,JSON.stringify(e,null,2));let t=await o.Z.employees.upsert({where:{id:e.id},update:{name:e.name,email:e.email,status:e.status,department:e.department,position:e.position,hire_date:e.hireDate||null,termination_date:e.terminationDate,updated_at:new Date},create:{id:e.id,name:e.name,email:e.email,status:e.status,department:e.department,position:e.position,hire_date:e.hireDate||null,termination_date:e.terminationDate,created_at:new Date,updated_at:new Date}});return console.log(`‚úÖ Employee saved: ${e.name} (${e.id})`),t}catch(t){if(console.error("‚ùå Error saving employee:",t),"P2025"===t.code){console.log(`üîÑ Record not found, attempting to create employee: ${e.name} (${e.id})`);try{let t=await o.Z.employees.create({data:{id:e.id,name:e.name,email:e.email,status:e.status,department:e.department,position:e.position,hire_date:e.hireDate||null,termination_date:e.terminationDate,created_at:new Date,updated_at:new Date}});return console.log(`‚úÖ Employee created: ${e.name} (${e.id})`),t}catch(e){throw console.error("‚ùå Error creating employee:",e),e}}throw t}}async function i(e){try{console.log(`üîÑ Attempting to upsert employee salary:`,JSON.stringify(e,null,2));let t=await o.Z.employee_salaries.upsert({where:{employee_id_effective_date:{employee_id:e.employeeId,effective_date:e.effectiveDate}},update:{end_date:e.endDate,annual_salary:e.annualSalary,hourly_rate:e.hourlyRate,currency:e.currency,notes:e.notes,source:e.source,updated_at:new Date},create:{employee_id:e.employeeId,effective_date:e.effectiveDate,end_date:e.endDate,annual_salary:e.annualSalary,hourly_rate:e.hourlyRate,currency:e.currency||"USD",notes:e.notes,source:e.source||"bamboohr",created_at:new Date,updated_at:new Date}});return console.log(`‚úÖ Employee salary saved for ${e.employeeId} effective ${e.effectiveDate}`),t}catch(t){if(console.error("‚ùå Error saving employee salary:",t),"P2025"===t.code){console.log(`üîÑ Record not found, attempting to create employee salary for ${e.employeeId} effective ${e.effectiveDate}`);try{let t=await o.Z.employee_salaries.create({data:{employee_id:e.employeeId,effective_date:e.effectiveDate,end_date:e.endDate,annual_salary:e.annualSalary,hourly_rate:e.hourlyRate,currency:e.currency||"USD",notes:e.notes,source:e.source||"bamboohr",created_at:new Date,updated_at:new Date}});return console.log(`‚úÖ Employee salary created for ${e.employeeId} effective ${e.effectiveDate}`),t}catch(e){throw console.error("‚ùå Error creating employee salary:",e),e}}throw t}}async function l(e){try{let t=await o.Z.project_multipliers.upsert({where:{project_id_effective_date:{project_id:e.projectId,effective_date:e.effectiveDate}},update:{project_name:e.projectName,multiplier:e.multiplier,end_date:e.endDate,notes:e.notes,updated_at:new Date},create:{project_id:e.projectId,project_name:e.projectName,multiplier:e.multiplier,effective_date:e.effectiveDate,end_date:e.endDate,notes:e.notes,created_at:new Date,updated_at:new Date}});return console.log(`Project multiplier saved for ${e.projectName} effective ${e.effectiveDate}`),t}catch(e){throw console.error("Error saving project multiplier:",e),e}}async function d(e){try{let t=await o.Z.employee_time_entries.upsert({where:{employee_id_project_id_date:{employee_id:e.employeeId,project_id:e.projectId,date:e.date}},update:{employee_name:e.employeeName,project_name:e.projectName,hours:e.hours,billable_hours:e.billableHours,non_billable_hours:e.nonBillableHours,hourly_rate:e.hourlyRate,project_multiplier:e.projectMultiplier,total_cost:e.totalCost,billable_value:e.billableValue,efficiency:e.efficiency,description:e.description,tags:e.tags,updated_at:new Date},create:{employee_id:e.employeeId,employee_name:e.employeeName,project_id:e.projectId,project_name:e.projectName,date:e.date,hours:e.hours,billable_hours:e.billableHours,non_billable_hours:e.nonBillableHours,hourly_rate:e.hourlyRate,project_multiplier:e.projectMultiplier,total_cost:e.totalCost,billable_value:e.billableValue,efficiency:e.efficiency,description:e.description,tags:e.tags,created_at:new Date,updated_at:new Date}});return console.log(`Time entry saved for ${e.employeeName} on ${e.date}`),t}catch(e){throw console.error("Error saving time entry:",e),e}}async function p(){try{return await o.Z.employees.findMany()}catch(e){throw console.error("Error getting all employees:",e),e}}async function u(){try{return await o.Z.employee_salaries.findMany()}catch(e){throw console.error("Error getting all employee salaries:",e),e}}async function m(){try{return await o.Z.project_multipliers.findMany()}catch(e){throw console.error("Error getting all project multipliers:",e),e}}},9487:(e,t,a)=>{a.d(t,{Z:()=>r});var o=a(53524);let r=globalThis.prisma??new o.PrismaClient({log:["error"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),o=t.X(0,[9276,5972],()=>a(17949));module.exports=o})();