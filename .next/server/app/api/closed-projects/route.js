"use strict";(()=>{var e={};e.id=625,e.ids=[625],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},17949:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>x,patchFetch:()=>f,requestAsyncStorage:()=>h,routeModule:()=>j,serverHooks:()=>y,staticGenerationAsyncStorage:()=>g});var r={};o.r(r),o.d(r,{DELETE:()=>m,GET:()=>p,POST:()=>u,dynamic:()=>d});var s=o(49303),a=o(88716),c=o(60670),n=o(87070),i=o(52663),l=o(24544);let d="force-dynamic";async function p(){try{if(!await (0,l.Xp)())return console.log("Tables do not exist yet, returning empty closed projects"),n.NextResponse.json({});let e=(await i.Z.closedProject.findMany()).map(e=>e.projectId);return n.NextResponse.json(e)}catch(e){if(console.error("Error fetching closed projects:",e),e instanceof Error&&(e.message?.includes("does not exist")||"code"in e&&"P2021"===e.code))return console.log("Tables do not exist, returning empty closed projects"),n.NextResponse.json({});return n.NextResponse.json({error:"Failed to fetch closed projects"},{status:500})}}async function u(e){let{projectId:t}=await e.json();try{return await (0,l.Xp)()||(console.log("Tables do not exist yet, but Prisma Accelerate will create them on first insert"),console.log("Attempting to create table by inserting data...")),await i.Z.closedProject.upsert({where:{projectId:t},update:{},create:{projectId:t}}),n.NextResponse.json({success:!0})}catch(e){if(console.error("Error updating closed project:",e),e instanceof Error&&(e.message?.includes("does not exist")||"code"in e&&"P2021"===e.code)){console.log("Table does not exist, attempting to create schema...");try{return await i.Z.closedProject.create({data:{projectId:"__test__"}}),await i.Z.closedProject.deleteMany({where:{projectId:"__test__"}}),await i.Z.closedProject.upsert({where:{projectId:t},update:{},create:{projectId:t}}),n.NextResponse.json({success:!0})}catch(e){return console.error("Failed to create table:",e),n.NextResponse.json({error:"Database schema not ready. Please run database setup first."},{status:500})}}return n.NextResponse.json({error:"Failed to update closed project"},{status:500})}}async function m(e){let{projectId:t}=await e.json();try{return await i.Z.closedProject.delete({where:{projectId:t}}),n.NextResponse.json({success:!0})}catch(e){return console.error("Error removing closed project:",e),n.NextResponse.json({error:"Failed to remove closed project"},{status:500})}}let j=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/closed-projects/route",pathname:"/api/closed-projects",filename:"route",bundlePath:"app/api/closed-projects/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\closed-projects\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:h,staticGenerationAsyncStorage:g,serverHooks:y}=j,x="/api/closed-projects/route";function f(){return(0,c.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:g})}},24544:(e,t,o)=>{o.d(t,{Xp:()=>s,_B:()=>r.Z,eK:()=>a});var r=o(52663);async function s(){try{return await r.Z.projection.findFirst(),console.log("Database schema already exists"),!0}catch(e){if(console.log("Tables do not exist, attempting to create schema..."),"P2021"===e.code||e.message?.includes("does not exist"))try{return console.log("Attempting to create database schema..."),await r.Z.projection.create({data:{projectId:"__test__",month:"__test__",value:0}}),await r.Z.projection.deleteMany({where:{projectId:"__test__",month:"__test__"}}),console.log("Database schema created successfully"),!0}catch(e){return console.error("Failed to create database schema:",e),!1}return console.log("Tables do not exist, but Prisma Accelerate will create them automatically"),console.log("Note: With Prisma Accelerate, tables are created automatically when you first insert data"),!1}}async function a(){try{if(console.log("Creating database schema..."),await s())return console.log("Database schema creation completed successfully"),!0;return console.error("Database schema creation failed"),!1}catch(e){return console.error("Database schema creation failed:",e),!1}}},52663:(e,t,o)=>{o.d(t,{Z:()=>s});let r=require("@prisma/client"),s=globalThis.prisma??new r.PrismaClient({log:["error"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),r=t.X(0,[276,972],()=>o(17949));module.exports=r})();