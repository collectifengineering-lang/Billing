"use strict";(()=>{var e={};e.id=13,e.ids=[13],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84816:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>x,patchFetch:()=>j,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var r={};o.r(r),o.d(r,{GET:()=>p,POST:()=>u,dynamic:()=>i});var s=o(49303),n=o(88716),a=o(60670),c=o(87070),m=o(52663);let i="force-dynamic";async function p(){try{console.log("Fetching comments from database...");let e=await m.Z.comment.findMany();console.log("Fetched",e.length,"comments from database");let t=e.reduce((e,t)=>(e[t.projectId]||(e[t.projectId]={}),e[t.projectId][t.month]=t.comment,e),{});return c.NextResponse.json(t)}catch(e){if(console.error("Error fetching comments:",e),"P2021"===e.code||e.message?.includes("does not exist"))return console.log("Tables do not exist, returning empty comments"),c.NextResponse.json({});return c.NextResponse.json({error:"Failed to fetch comments"},{status:500})}}async function u(e){let{projectId:t,month:o,comment:r}=await e.json();try{return console.log("Updating comment for project:",t,"month:",o),await m.Z.comment.upsert({where:{projectId_month:{projectId:t,month:o}},update:{comment:r},create:{projectId:t,month:o,comment:r}}),console.log("Comment updated successfully"),c.NextResponse.json({success:!0})}catch(e){if(console.error("Error updating comment:",e),"P2021"===e.code||e.message?.includes("does not exist")){console.log("Table does not exist, attempting to create schema...");try{return await m.Z.comment.create({data:{projectId:"__test__",month:"__test__",comment:"test"}}),await m.Z.comment.deleteMany({where:{projectId:"__test__",month:"__test__"}}),await m.Z.comment.upsert({where:{projectId_month:{projectId:t,month:o}},update:{comment:r},create:{projectId:t,month:o,comment:r}}),c.NextResponse.json({success:!0})}catch(e){return console.error("Failed to create table:",e),c.NextResponse.json({error:"Database schema not ready. Please run database setup first."},{status:500})}}return c.NextResponse.json({error:"Failed to update comment"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/comments/route",pathname:"/api/comments",filename:"route",bundlePath:"app/api/comments/route"},resolvedPagePath:"C:\\Users\\Jonathan\\Desktop\\Billing\\app\\api\\comments\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:h,serverHooks:g}=d,x="/api/comments/route";function j(){return(0,a.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}},52663:(e,t,o)=>{o.d(t,{Z:()=>s});let r=require("@prisma/client"),s=globalThis.prisma??new r.PrismaClient({log:["error"]})}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),r=t.X(0,[276,972],()=>o(84816));module.exports=r})();