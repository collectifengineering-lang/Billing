"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/status/route";
exports.ids = ["app/api/auth/status/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fstatus%2Froute&page=%2Fapi%2Fauth%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fstatus%2Froute&page=%2Fapi%2Fauth%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Jonathan_Desktop_Billing_app_api_auth_status_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/status/route.ts */ \"(rsc)/./app/api/auth/status/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/status/route\",\n        pathname: \"/api/auth/status\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/status/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Billing\\\\app\\\\api\\\\auth\\\\status\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Jonathan_Desktop_Billing_app_api_auth_status_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/status/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGc3RhdHVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhdXRoJTJGc3RhdHVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYXV0aCUyRnN0YXR1cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNKb25hdGhhbiU1Q0Rlc2t0b3AlNUNCaWxsaW5nJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNKb25hdGhhbiU1Q0Rlc2t0b3AlNUNCaWxsaW5nJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1QjtBQUNwRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3pvaG8tYmlsbGluZy1wbGF0Zm9ybS8/M2JjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxKb25hdGhhblxcXFxEZXNrdG9wXFxcXEJpbGxpbmdcXFxcYXBwXFxcXGFwaVxcXFxhdXRoXFxcXHN0YXR1c1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXV0aC9zdGF0dXMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hdXRoL3N0YXR1c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYXV0aC9zdGF0dXMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxKb25hdGhhblxcXFxEZXNrdG9wXFxcXEJpbGxpbmdcXFxcYXBwXFxcXGFwaVxcXFxhdXRoXFxcXHN0YXR1c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXV0aC9zdGF0dXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fstatus%2Froute&page=%2Fapi%2Fauth%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/auth/status/route.ts":
/*!**************************************!*\
  !*** ./app/api/auth/status/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_zoho__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/zoho */ \"(rsc)/./lib/zoho.ts\");\n\n\n// Force dynamic rendering to prevent static generation\nconst dynamic = \"force-dynamic\";\nasync function GET(_request) {\n    try {\n        const status = _lib_zoho__WEBPACK_IMPORTED_MODULE_1__.zohoService.getTokenStatus();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            status: {\n                hasToken: status.hasToken,\n                expiresIn: Math.round(status.expiresIn / 1000 / 60),\n                isExpired: status.isExpired,\n                expiresAt: new Date(status.expiresIn + Date.now()).toISOString()\n            }\n        });\n    } catch (error) {\n        console.error(\"Error getting token status:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to get token status\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { action } = await request.json();\n        if (action === \"refresh\") {\n            await _lib_zoho__WEBPACK_IMPORTED_MODULE_1__.zohoService.forceRefreshToken();\n            const status = _lib_zoho__WEBPACK_IMPORTED_MODULE_1__.zohoService.getTokenStatus();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: \"Token refreshed successfully\",\n                status: {\n                    hasToken: status.hasToken,\n                    expiresIn: Math.round(status.expiresIn / 1000 / 60),\n                    isExpired: status.isExpired,\n                    expiresAt: new Date(status.expiresIn + Date.now()).toISOString()\n                }\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Invalid action\"\n        }, {\n            status: 400\n        });\n    } catch (error) {\n        console.error(\"Error refreshing token:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to refresh token\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2F1dGgvc3RhdHVzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdEO0FBQ2Y7QUFFekMsdURBQXVEO0FBQ2hELE1BQU1FLFVBQVUsZ0JBQWdCO0FBRWhDLGVBQWVDLElBQUlDLFFBQXFCO0lBQzdDLElBQUk7UUFDRixNQUFNQyxTQUFTSixrREFBV0EsQ0FBQ0ssY0FBYztRQUV6QyxPQUFPTixxREFBWUEsQ0FBQ08sSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RILFFBQVE7Z0JBQ05JLFVBQVVKLE9BQU9JLFFBQVE7Z0JBQ3pCQyxXQUFXQyxLQUFLQyxLQUFLLENBQUNQLE9BQU9LLFNBQVMsR0FBRyxPQUFPO2dCQUNoREcsV0FBV1IsT0FBT1EsU0FBUztnQkFDM0JDLFdBQVcsSUFBSUMsS0FBS1YsT0FBT0ssU0FBUyxHQUFHSyxLQUFLQyxHQUFHLElBQUlDLFdBQVc7WUFDaEU7UUFDRjtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtRQUM3QyxPQUFPbEIscURBQVlBLENBQUNPLElBQUksQ0FDdEI7WUFBRVcsT0FBTztRQUE2QixHQUN0QztZQUFFYixRQUFRO1FBQUk7SUFFbEI7QUFDRjtBQUVPLGVBQWVlLEtBQUtDLE9BQW9CO0lBQzdDLElBQUk7UUFDRixNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1ELFFBQVFkLElBQUk7UUFFckMsSUFBSWUsV0FBVyxXQUFXO1lBQ3hCLE1BQU1yQixrREFBV0EsQ0FBQ3NCLGlCQUFpQjtZQUNuQyxNQUFNbEIsU0FBU0osa0RBQVdBLENBQUNLLGNBQWM7WUFFekMsT0FBT04scURBQVlBLENBQUNPLElBQUksQ0FBQztnQkFDdkJDLFNBQVM7Z0JBQ1RnQixTQUFTO2dCQUNUbkIsUUFBUTtvQkFDTkksVUFBVUosT0FBT0ksUUFBUTtvQkFDekJDLFdBQVdDLEtBQUtDLEtBQUssQ0FBQ1AsT0FBT0ssU0FBUyxHQUFHLE9BQU87b0JBQ2hERyxXQUFXUixPQUFPUSxTQUFTO29CQUMzQkMsV0FBVyxJQUFJQyxLQUFLVixPQUFPSyxTQUFTLEdBQUdLLEtBQUtDLEdBQUcsSUFBSUMsV0FBVztnQkFDaEU7WUFDRjtRQUNGO1FBRUEsT0FBT2pCLHFEQUFZQSxDQUFDTyxJQUFJLENBQ3RCO1lBQUVXLE9BQU87UUFBaUIsR0FDMUI7WUFBRWIsUUFBUTtRQUFJO0lBRWxCLEVBQUUsT0FBT2EsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPbEIscURBQVlBLENBQUNPLElBQUksQ0FDdEI7WUFBRVcsT0FBTztRQUEwQixHQUNuQztZQUFFYixRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3pvaG8tYmlsbGluZy1wbGF0Zm9ybS8uL2FwcC9hcGkvYXV0aC9zdGF0dXMvcm91dGUudHM/ZWYzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyB6b2hvU2VydmljZSB9IGZyb20gJ0AvbGliL3pvaG8nO1xyXG5cclxuLy8gRm9yY2UgZHluYW1pYyByZW5kZXJpbmcgdG8gcHJldmVudCBzdGF0aWMgZ2VuZXJhdGlvblxyXG5leHBvcnQgY29uc3QgZHluYW1pYyA9ICdmb3JjZS1keW5hbWljJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoX3JlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHN0YXR1cyA9IHpvaG9TZXJ2aWNlLmdldFRva2VuU3RhdHVzKCk7XHJcbiAgICBcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIHN0YXR1czoge1xyXG4gICAgICAgIGhhc1Rva2VuOiBzdGF0dXMuaGFzVG9rZW4sXHJcbiAgICAgICAgZXhwaXJlc0luOiBNYXRoLnJvdW5kKHN0YXR1cy5leHBpcmVzSW4gLyAxMDAwIC8gNjApLCAvLyBtaW51dGVzXHJcbiAgICAgICAgaXNFeHBpcmVkOiBzdGF0dXMuaXNFeHBpcmVkLFxyXG4gICAgICAgIGV4cGlyZXNBdDogbmV3IERhdGUoc3RhdHVzLmV4cGlyZXNJbiArIERhdGUubm93KCkpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyB0b2tlbiBzdGF0dXM6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIGdldCB0b2tlbiBzdGF0dXMnIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgYWN0aW9uIH0gPSBhd2FpdCByZXF1ZXN0Lmpzb24oKTtcclxuICAgIFxyXG4gICAgaWYgKGFjdGlvbiA9PT0gJ3JlZnJlc2gnKSB7XHJcbiAgICAgIGF3YWl0IHpvaG9TZXJ2aWNlLmZvcmNlUmVmcmVzaFRva2VuKCk7XHJcbiAgICAgIGNvbnN0IHN0YXR1cyA9IHpvaG9TZXJ2aWNlLmdldFRva2VuU3RhdHVzKCk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZTogJ1Rva2VuIHJlZnJlc2hlZCBzdWNjZXNzZnVsbHknLFxyXG4gICAgICAgIHN0YXR1czoge1xyXG4gICAgICAgICAgaGFzVG9rZW46IHN0YXR1cy5oYXNUb2tlbixcclxuICAgICAgICAgIGV4cGlyZXNJbjogTWF0aC5yb3VuZChzdGF0dXMuZXhwaXJlc0luIC8gMTAwMCAvIDYwKSwgLy8gbWludXRlc1xyXG4gICAgICAgICAgaXNFeHBpcmVkOiBzdGF0dXMuaXNFeHBpcmVkLFxyXG4gICAgICAgICAgZXhwaXJlc0F0OiBuZXcgRGF0ZShzdGF0dXMuZXhwaXJlc0luICsgRGF0ZS5ub3coKSkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnSW52YWxpZCBhY3Rpb24nIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVmcmVzaGluZyB0b2tlbjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgZXJyb3I6ICdGYWlsZWQgdG8gcmVmcmVzaCB0b2tlbicgfSxcclxuICAgICAgeyBzdGF0dXM6IDUwMCB9XHJcbiAgICApO1xyXG4gIH1cclxufSAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiem9ob1NlcnZpY2UiLCJkeW5hbWljIiwiR0VUIiwiX3JlcXVlc3QiLCJzdGF0dXMiLCJnZXRUb2tlblN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwiaGFzVG9rZW4iLCJleHBpcmVzSW4iLCJNYXRoIiwicm91bmQiLCJpc0V4cGlyZWQiLCJleHBpcmVzQXQiLCJEYXRlIiwibm93IiwidG9JU09TdHJpbmciLCJlcnJvciIsImNvbnNvbGUiLCJQT1NUIiwicmVxdWVzdCIsImFjdGlvbiIsImZvcmNlUmVmcmVzaFRva2VuIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/status/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/zoho.ts":
/*!*********************!*\
  !*** ./lib/zoho.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchInvoices: () => (/* binding */ fetchInvoices),\n/* harmony export */   fetchProjects: () => (/* binding */ fetchProjects),\n/* harmony export */   zohoService: () => (/* binding */ zohoService)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\nclass ZohoService {\n    constructor(){\n        this.accessToken = null;\n        this.tokenExpiry = 0;\n        this.refreshPromise = null;\n        this.TOKEN_REFRESH_BUFFER = 5 * 60 * 1000 // 5 minutes buffer\n        ;\n        this.autoRefreshTimer = null;\n        this.AUTO_REFRESH_INTERVAL = 45 * 60 * 1000 // 45 minutes\n        ;\n        this.lastRefreshTime = 0 // Track when auto-refresh was last triggered\n        ;\n        // Start automatic token refresh\n        this._startAutoRefresh();\n    }\n    _startAutoRefresh() {\n        // Clear any existing timer\n        if (this.autoRefreshTimer) {\n            clearInterval(this.autoRefreshTimer);\n        }\n        // Set up automatic refresh every 45 minutes\n        this.autoRefreshTimer = setInterval(async ()=>{\n            try {\n                console.log(\"Auto-refreshing Zoho token (45-minute interval)...\");\n                this.lastRefreshTime = Date.now(); // Track when refresh was triggered\n                await this.forceRefreshToken();\n                console.log(\"Auto-refresh completed successfully\");\n            } catch (error) {\n                console.error(\"Auto-refresh failed:\", error);\n            }\n        }, this.AUTO_REFRESH_INTERVAL);\n        // Set initial refresh time\n        this.lastRefreshTime = Date.now();\n        console.log(\"Automatic Zoho token refresh started (every 45 minutes)\");\n    }\n    _stopAutoRefresh() {\n        if (this.autoRefreshTimer) {\n            clearInterval(this.autoRefreshTimer);\n            this.autoRefreshTimer = null;\n            console.log(\"Automatic Zoho token refresh stopped\");\n        }\n    }\n    async getAccessToken() {\n        // Check if token is still valid (with buffer)\n        if (this.accessToken && Date.now() < this.tokenExpiry - this.TOKEN_REFRESH_BUFFER) {\n            return this.accessToken;\n        }\n        // If there's already a refresh in progress, wait for it\n        if (this.refreshPromise) {\n            return this.refreshPromise;\n        }\n        // Start a new refresh\n        this.refreshPromise = this.refreshAccessToken();\n        try {\n            const token = await this.refreshPromise;\n            return token;\n        } finally{\n            this.refreshPromise = null;\n        }\n    }\n    async refreshAccessToken() {\n        try {\n            console.log(\"Refreshing Zoho access token...\");\n            // Create form data for the request\n            const formData = new URLSearchParams();\n            formData.append(\"refresh_token\", \"1000.4bf26c4881dfba83aae32546453d662d.a9353e91362a18c457b5cbec86b10ed2\" || 0);\n            formData.append(\"client_id\", \"1000.8RL8WMTDXS0WIP2EJF2XUS6NDSLQEP\" || 0);\n            formData.append(\"client_secret\", \"8a7ee3c04f0a0d860dd215c4449deab9bf15d1d00b\" || 0);\n            formData.append(\"grant_type\", \"refresh_token\");\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"https://accounts.zoho.com/oauth/v2/token\", formData, {\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n            });\n            this.accessToken = response.data.access_token;\n            this.tokenExpiry = Date.now() + response.data.expires_in * 1000;\n            console.log(`Token refreshed successfully. Expires in ${Math.round(response.data.expires_in / 60)} minutes`);\n            return this.accessToken;\n        } catch (error) {\n            console.error(\"Error refreshing Zoho access token:\", error);\n            throw new Error(\"Failed to authenticate with Zoho\");\n        }\n    }\n    async makeRequest(endpoint) {\n        const token = await this.getAccessToken();\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://www.zohoapis.com/books/v3/${endpoint}`, {\n                headers: {\n                    \"Authorization\": `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                params: {\n                    organization_id: \"652094923\"\n                }\n            });\n            return response.data;\n        } catch (error) {\n            // If we get a 401, try refreshing the token once\n            if (error.response?.status === 401) {\n                console.log(\"Token expired, refreshing...\");\n                this.accessToken = null;\n                this.tokenExpiry = 0;\n                const newToken = await this.getAccessToken();\n                // Retry the request with the new token\n                const retryResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://www.zohoapis.com/books/v3/${endpoint}`, {\n                    headers: {\n                        \"Authorization\": `Bearer ${newToken}`,\n                        \"Content-Type\": \"application/json\"\n                    },\n                    params: {\n                        organization_id: \"652094923\"\n                    }\n                });\n                return retryResponse.data;\n            }\n            console.error(`Error making Zoho request to ${endpoint}:`, error);\n            throw new Error(`Failed to fetch data from Zoho: ${endpoint}`);\n        }\n    }\n    async getProjects() {\n        try {\n            let allProjects = [];\n            let page = 1;\n            const perPage = 200;\n            while(true){\n                const data = await this.makeRequest(`projects?page=${page}&per_page=${perPage}`);\n                const projects = data.projects?.map((project)=>{\n                    // Log the first project to see available fields\n                    if (page === 1 && allProjects.length === 0) {\n                        console.log(\"Sample Zoho project data:\", JSON.stringify(project, null, 2));\n                    }\n                    return {\n                        project_id: project.project_id,\n                        project_name: project.project_name || project.name || \"\",\n                        description: project.description || \"\",\n                        status: project.status || \"active\",\n                        start_date: project.start_date || \"\",\n                        end_date: project.end_date || \"\",\n                        budget_amount: project.budget_amount || 0,\n                        rate_per_hour: project.rate_per_hour || 0,\n                        customer_id: project.customer_id || \"\",\n                        customer_name: project.customer_name || \"\",\n                        signed_fee: undefined\n                    };\n                }) || [];\n                allProjects = allProjects.concat(projects);\n                // Check if we've reached the end\n                if (projects.length < perPage) {\n                    break;\n                }\n                page++;\n            }\n            console.log(`Fetched ${allProjects.length} projects from Zoho`);\n            return allProjects;\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n            return [];\n        }\n    }\n    async getProjectsWithRevenueBudget() {\n        try {\n            console.log(\"Fetching projects with revenue budget data...\");\n            const projects = await this.getProjects();\n            // Log projects that have revenue_budget data\n            const projectsWithRevenueBudget = projects.filter((project)=>{\n                const hasRevenueBudget = project.signed_fee && project.signed_fee > 0;\n                if (hasRevenueBudget) {\n                    console.log(`Project ${project.project_name} has revenue budget: $${project.signed_fee}`);\n                }\n                return hasRevenueBudget;\n            });\n            console.log(`Found ${projectsWithRevenueBudget.length} projects with revenue budget data`);\n            return projects;\n        } catch (error) {\n            console.error(\"Error fetching projects with revenue budget:\", error);\n            return [];\n        }\n    }\n    async debugProjectFields() {\n        try {\n            console.log(\"Debugging Zoho project fields...\");\n            const data = await this.makeRequest(\"projects?page=1&per_page=5\");\n            if (data.projects && data.projects.length > 0) {\n                console.log(\"Available fields in Zoho project response:\");\n                const sampleProject = data.projects[0];\n                Object.keys(sampleProject).forEach((key)=>{\n                    console.log(`  ${key}: ${sampleProject[key]} (${typeof sampleProject[key]})`);\n                });\n                // Check specifically for revenue_budget\n                if (sampleProject.revenue_budget !== undefined) {\n                    console.log(`✅ Found revenue_budget field: ${sampleProject.revenue_budget}`);\n                } else {\n                    console.log(\"❌ revenue_budget field not found in Zoho response\");\n                    console.log(\"Available budget-related fields:\");\n                    Object.keys(sampleProject).forEach((key)=>{\n                        if (key.toLowerCase().includes(\"budget\") || key.toLowerCase().includes(\"revenue\")) {\n                            console.log(`  ${key}: ${sampleProject[key]}`);\n                        }\n                    });\n                }\n            } else {\n                console.log(\"No projects found in Zoho response\");\n            }\n        } catch (error) {\n            console.error(\"Error debugging project fields:\", error);\n        }\n    }\n    async getProjectsWithEstimates() {\n        try {\n            const projects = await this.getProjects();\n            // For the first few projects, try to get estimates to see if that contains the signed fee\n            const projectsWithEstimates = await Promise.all(projects.slice(0, 5).map(async (project)=>{\n                try {\n                    const estimates = await this.getProjectEstimates(project.project_id);\n                    const totalEstimateAmount = estimates.reduce((sum, estimate)=>sum + (estimate.total || 0), 0);\n                    console.log(`Project ${project.project_name} estimates:`, estimates.length, \"total amount:\", totalEstimateAmount);\n                    return {\n                        ...project,\n                        signed_fee: project.signed_fee || totalEstimateAmount || 0\n                    };\n                } catch (error) {\n                    console.error(`Error fetching estimates for project ${project.project_id}:`, error);\n                    return project;\n                }\n            }));\n            // Return all projects, with the first 5 having updated signed fees from estimates\n            return [\n                ...projectsWithEstimates,\n                ...projects.slice(5)\n            ];\n        } catch (error) {\n            console.error(\"Error fetching projects with estimates:\", error);\n            return [];\n        }\n    }\n    async getProjectsWithInvoiceTotals() {\n        try {\n            const [projects, invoices] = await Promise.all([\n                this.getProjects(),\n                this.getInvoices()\n            ]);\n            // Calculate signed fee as total of all invoices for each project\n            const projectsWithInvoiceTotals = projects.map((project)=>{\n                const projectInvoices = invoices.filter((invoice)=>invoice.project_id === project.project_id);\n                const totalInvoiceAmount = projectInvoices.reduce((sum, invoice)=>sum + invoice.amount, 0);\n                console.log(`Project ${project.project_name} invoices:`, projectInvoices.length, \"total amount:\", totalInvoiceAmount);\n                return {\n                    ...project,\n                    signed_fee: project.signed_fee || totalInvoiceAmount || 0\n                };\n            });\n            return projectsWithInvoiceTotals;\n        } catch (error) {\n            console.error(\"Error fetching projects with invoice totals:\", error);\n            return [];\n        }\n    }\n    async getInvoices() {\n        try {\n            const data = await this.makeRequest(\"invoices\");\n            return data.invoices?.map((invoice)=>({\n                    invoice_id: invoice.invoice_id,\n                    project_id: invoice.project_id,\n                    invoice_number: invoice.invoice_number,\n                    date: invoice.date,\n                    amount: invoice.total,\n                    status: invoice.status,\n                    billed_amount: invoice.billed_amount || 0,\n                    unbilled_amount: invoice.unbilled_amount || 0\n                })) || [];\n        } catch (error) {\n            console.error(\"Error fetching invoices:\", error);\n            return [];\n        }\n    }\n    async getProjectInvoices(projectId) {\n        try {\n            const data = await this.makeRequest(`projects/${projectId}/invoices`);\n            return data.invoices?.map((invoice)=>({\n                    invoice_id: invoice.invoice_id,\n                    project_id: invoice.project_id,\n                    invoice_number: invoice.invoice_number,\n                    date: invoice.date,\n                    amount: invoice.total,\n                    status: invoice.status,\n                    billed_amount: invoice.billed_amount || 0,\n                    unbilled_amount: invoice.unbilled_amount || 0\n                })) || [];\n        } catch (error) {\n            console.error(\"Error fetching project invoices:\", error);\n            return [];\n        }\n    }\n    async getProjectDetails(projectId) {\n        try {\n            const data = await this.makeRequest(`projects/${projectId}`);\n            console.log(`Project ${projectId} details:`, JSON.stringify(data, null, 2));\n            return data;\n        } catch (error) {\n            console.error(\"Error fetching project details:\", error);\n            return null;\n        }\n    }\n    async getProjectEstimates(projectId) {\n        try {\n            const data = await this.makeRequest(`projects/${projectId}/estimates`);\n            console.log(`Project ${projectId} estimates:`, JSON.stringify(data, null, 2));\n            return data.estimates || [];\n        } catch (error) {\n            console.error(\"Error fetching project estimates:\", error);\n            return [];\n        }\n    }\n    async getProjectContracts(projectId) {\n        try {\n            const data = await this.makeRequest(`projects/${projectId}/contracts`);\n            console.log(`Project ${projectId} contracts:`, JSON.stringify(data, null, 2));\n            return data.contracts || [];\n        } catch (error) {\n            console.error(\"Error fetching project contracts:\", error);\n            return [];\n        }\n    }\n    // Method to manually refresh token (for testing)\n    async forceRefreshToken() {\n        this.accessToken = null;\n        this.tokenExpiry = 0;\n        this.lastRefreshTime = Date.now(); // Track manual refresh time\n        await this.getAccessToken();\n    }\n    // Get token status for debugging\n    getTokenStatus() {\n        const now = Date.now();\n        return {\n            hasToken: !!this.accessToken,\n            expiresIn: this.tokenExpiry - now,\n            isExpired: now >= this.tokenExpiry\n        };\n    }\n    // Method to get auto-refresh status\n    getAutoRefreshStatus() {\n        const now = Date.now();\n        const timeSinceLastRefresh = now - this.lastRefreshTime;\n        const nextRefreshIn = Math.max(0, this.AUTO_REFRESH_INTERVAL - timeSinceLastRefresh);\n        return {\n            isActive: !!this.autoRefreshTimer,\n            nextRefreshIn\n        };\n    }\n    // Public method to start auto-refresh\n    enableAutoRefresh() {\n        this._startAutoRefresh();\n    }\n    // Public method to stop auto-refresh\n    disableAutoRefresh() {\n        this._stopAutoRefresh();\n    }\n    // Public method to get comprehensive status\n    getStatus() {\n        return {\n            ...this.getTokenStatus(),\n            autoRefresh: this.getAutoRefreshStatus()\n        };\n    }\n}\nconst zohoService = new ZohoService();\n// Export the functions that are being imported in page.tsx\nconst fetchProjects = async ()=>{\n    try {\n        console.log(\"Client: Fetching projects from API\");\n        const response = await fetch(\"/api/projects\");\n        const result = await response.json();\n        if (result.success) {\n            console.log(\"Client: Successfully fetched\", result.count, \"projects\");\n            return result.data;\n        } else {\n            console.error(\"Client: API returned error:\", result.error);\n            throw new Error(result.error);\n        }\n    } catch (error) {\n        console.error(\"Client: Error fetching projects:\", error);\n        throw error;\n    }\n};\nconst fetchInvoices = async ()=>{\n    try {\n        console.log(\"Client: Fetching invoices from API\");\n        const response = await fetch(\"/api/invoices\");\n        const result = await response.json();\n        if (result.success) {\n            console.log(\"Client: Successfully fetched\", result.count, \"invoices\");\n            return result.data;\n        } else {\n            console.error(\"Client: API returned error:\", result.error);\n            throw new Error(result.error);\n        }\n    } catch (error) {\n        console.error(\"Client: Error fetching invoices:\", error);\n        throw error;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/zoho.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/mime-db","vendor-chunks/axios","vendor-chunks/follow-redirects","vendor-chunks/debug","vendor-chunks/form-data","vendor-chunks/get-intrinsic","vendor-chunks/asynckit","vendor-chunks/combined-stream","vendor-chunks/mime-types","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/has-symbols","vendor-chunks/delayed-stream","vendor-chunks/function-bind","vendor-chunks/es-set-tostringtag","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/has-flag","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/es-object-atoms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Fstatus%2Froute&page=%2Fapi%2Fauth%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CJonathan%5CDesktop%5CBilling&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();