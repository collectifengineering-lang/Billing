// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")  // Pooled URL for runtime queries
  directUrl    = env("DIRECT_URL")    // Direct URL for migrations and Prisma Studio
  relationMode = "prisma" // Helps with connection efficiency in Supabase
}

model Projection {
  id        Int     @id @default(autoincrement())
  projectId String
  month     String
  value     Float
  @@unique([projectId, month])
}

model Status {
  id        Int     @id @default(autoincrement())
  projectId String
  month     String
  status    String
  @@unique([projectId, month])
}

model Comment {
  id        Int     @id @default(autoincrement())
  projectId String
  month     String
  comment   String
  @@unique([projectId, month])
}

model SignedFee {
  id        Int     @id @default(autoincrement())
  projectId String @unique
  value     Float
}

model AsrFee {
  id        Int     @id @default(autoincrement())
  projectId String @unique
  value     Float
}

model ClosedProject {
  id        Int     @id @default(autoincrement())
  projectId String @unique
}

model ProjectAssignment {
  id        Int     @id @default(autoincrement())
  projectId String @unique
  managerId String
}

model ProjectManager {
  id        String  @id
  name      String
  color     String
}

// Clockify Integration Tables
model ClockifyTimeEntry {
  id          String   @id
  description String?
  userId      String
  userName    String?
  projectId   String
  projectName String?
  billable    Boolean  @default(false)
  startTime   DateTime
  endTime     DateTime?
  duration    String   // ISO 8601 duration format
  hourlyRate  Float?
  costRate    Float?
  tags        String[] // Array of tag names
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("clockify_time_entries")
}

model ClockifyProject {
  id          String   @id
  name        String
  workspaceId String
  clientId    String?
  clientName  String?
  billable    Boolean  @default(true)
  archived    Boolean  @default(false)
  hourlyRate  Float?
  budget      Float?
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("clockify_projects")
}

model ClockifyUser {
  id          String   @id
  name        String
  email       String
  workspaceId String
  status      String   @default("ACTIVE")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("clockify_users")
}

// BambooHR Integration Tables
model BambooHRConfig {
  id            Int      @id @default(autoincrement())
  subdomain    String   @unique
  apiKey       String   @map("api_key")
  webhookSecret String? @map("webhook_secret")
  isActive     Boolean  @default(true) @map("is_active")
  lastSync     DateTime? @map("last_sync")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("bamboohr_config")
}

model Employee {
  id              String            @id
  name            String
  email           String?
  status          String            @default("active")
  department      String?
  position        String?
  hireDate        String?           @map("hire_date")
  terminationDate String?           @map("termination_date")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  
  // Relations
  salaries        EmployeeSalary[]
  timeEntries     EmployeeTimeEntry[]
  
  @@map("employees")
}

model EmployeeSalary {
  id            Int      @id @default(autoincrement())
  employeeId    String   @map("employee_id")
  effectiveDate String   @map("effective_date")
  endDate       String?  @map("end_date")
  annualSalary  Decimal  @map("annual_salary") @db.Decimal(12, 2)
  hourlyRate    Decimal  @map("hourly_rate") @db.Decimal(8, 2)
  currency      String   @default("USD")
  notes         String?
  source        String   @default("bamboohr")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  // Relations
  employee      Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  
  @@unique([employeeId, effectiveDate])
  
  @@map("employee_salaries")
}

model ProjectMultiplier {
  id            Int      @id @default(autoincrement())
  projectId     String   @map("project_id")
  projectName   String   @map("project_name")
  multiplier    Decimal  @db.Decimal(4, 2)
  effectiveDate String   @map("effective_date")
  endDate       String?  @map("end_date")
  notes         String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  @@unique([projectId, effectiveDate])
  
  @@map("project_multipliers")
}

model EmployeeTimeEntry {
  id                Int      @id @default(autoincrement())
  employeeId        String   @map("employee_id")
  employeeName      String   @map("employee_name")
  projectId         String   @map("project_id")
  projectName       String   @map("project_name")
  date              String
  hours             Decimal  @db.Decimal(8, 2)
  billableHours     Decimal  @map("billable_hours") @db.Decimal(8, 2)
  nonBillableHours  Decimal  @map("non_billable_hours") @db.Decimal(8, 2)
  hourlyRate        Decimal  @map("hourly_rate") @db.Decimal(8, 2)
  projectMultiplier Decimal  @map("project_multiplier") @db.Decimal(4, 2)
  totalCost         Decimal  @map("total_cost") @db.Decimal(12, 2)
  billableValue     Decimal  @map("billable_value") @db.Decimal(12, 2)
  efficiency        Decimal  @db.Decimal(4, 4)
  description       String?
  tags              String[]
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  // Relations
  employee         Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  
  @@unique([employeeId, projectId, date])
  
  @@map("employee_time_entries")
}
