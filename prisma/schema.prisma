generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model AsrFee {
  id        Int    @id @default(autoincrement())
  projectId String @unique
  value     Float
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ClosedProject {
  id        Int    @id @default(autoincrement())
  projectId String @unique
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Comment {
  id        Int    @id @default(autoincrement())
  projectId String
  month     String
  comment   String

  @@unique([projectId, month])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ProjectAssignment {
  id        Int    @id @default(autoincrement())
  projectId String @unique
  managerId String
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ProjectManager {
  id    String @id
  name  String
  color String
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Projection {
  id        Int    @id @default(autoincrement())
  projectId String
  month     String
  value     Float

  @@unique([projectId, month])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model SignedFee {
  id        Int    @id @default(autoincrement())
  projectId String @unique
  value     Float
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Status {
  id        Int    @id @default(autoincrement())
  projectId String
  month     String
  status    String

  @@unique([projectId, month])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bamboohr_config {
  id             Int       @id @default(autoincrement())
  subdomain      String    @unique
  api_key        String
  webhook_secret String?
  is_active      Boolean   @default(true)
  last_sync      DateTime?
  created_at     DateTime  @default(now())
  updated_at     DateTime
}

model clockify_projects {
  id          String    @id
  name        String
  workspaceId String
  clientId    String?
  clientName  String?
  billable    Boolean   @default(true)
  archived    Boolean   @default(false)
  hourlyRate  Float?
  budget      Float?
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
}

model clockify_time_entries {
  id          String    @id
  description String?
  userId      String
  userName    String?
  projectId   String
  projectName String?
  billable    Boolean   @default(false)
  startTime   DateTime
  endTime     DateTime?
  duration    String
  hourlyRate  Float?
  costRate    Float?
  tags        String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
}

model clockify_users {
  id          String   @id
  name        String
  email       String
  workspaceId String
  status      String   @default("ACTIVE")
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model employee_salaries {
  id             Int      @id @default(autoincrement())
  employee_id    String
  effective_date String
  end_date       String?
  annual_salary  Decimal  @db.Decimal(12, 2)
  hourly_rate    Decimal  @db.Decimal(8, 2)
  currency       String   @default("USD")
  notes          String?
  source         String   @default("bamboohr")
  created_at     DateTime @default(now())
  updated_at     DateTime

  @@unique([employee_id, effective_date])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model employee_time_entries {
  id                 Int      @id @default(autoincrement())
  employee_id        String
  employee_name      String
  project_id         String
  project_name       String
  date               String
  hours              Decimal  @db.Decimal(8, 2)
  billable_hours     Decimal  @db.Decimal(8, 2)
  non_billable_hours Decimal  @db.Decimal(8, 2)
  hourly_rate        Decimal  @db.Decimal(8, 2)
  project_multiplier Decimal  @db.Decimal(4, 2)
  total_cost         Decimal  @db.Decimal(12, 2)
  billable_value     Decimal  @db.Decimal(12, 2)
  efficiency         Decimal  @db.Decimal(4, 4)
  description        String?
  tags               String[]
  created_at         DateTime @default(now())
  updated_at         DateTime

  @@unique([employee_id, project_id, date])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model employees {
  id               String   @id
  name             String
  email            String?
  status           String   @default("active")
  department       String?
  position         String?
  hire_date        String?
  termination_date String?
  created_at       DateTime @default(now())
  updated_at       DateTime
}

model financial_data_cache {
  id         Int      @id @default(autoincrement())
  cache_key  String   @unique
  data       String
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime

  @@index([cache_key, expires_at])
}

model performance_telemetry {
  id              Int      @id @default(autoincrement())
  endpoint        String
  duration        Int
  success         Boolean
  error_message   String?
  rate_limit_hit  Boolean  @default(false)
  retry_count     Int      @default(0)
  total_wait_time Int      @default(0)
  timestamp       DateTime @default(now())
  metadata        String?

  @@index([endpoint, timestamp])
  @@index([timestamp])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model project_multipliers {
  id             Int      @id @default(autoincrement())
  project_id     String
  project_name   String
  multiplier     Decimal  @db.Decimal(4, 2)
  effective_date String
  end_date       String?
  notes          String?
  created_at     DateTime @default(now())
  updated_at     DateTime

  @@unique([project_id, effective_date])
}

model projects {
  id           String   @id
  name         String
  customerName String?
  status       String   @default("active")
  createdAt    DateTime @default(now())
  updatedAt    DateTime
}

model zoho_token_cache {
  id            Int      @id @default(autoincrement())
  access_token  String
  expires_at    DateTime
  refresh_token String?
  api_domain    String?
  created_at    DateTime @default(now())
  updated_at    DateTime
}
